{
	"id": 0,
	"name": "Cocoon Cloud SDK",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 652,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 10,
			"name": "\"lib/api-url\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/api-url.ts",
			"children": [
				{
					"id": 11,
					"name": "APIURL",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 68,
							"name": "ACCESS_TOKEN_PARAMETER",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 69,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 90,
									"character": 41
								}
							]
						},
						{
							"id": 12,
							"name": "BASE",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 13,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 14,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 15,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 6,
									"character": 23
								},
								{
									"fileName": "lib/api-url.ts",
									"line": 10,
									"character": 23
								}
							]
						},
						{
							"id": 16,
							"name": "BASE_PROJECT",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 17,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 14,
									"character": 31
								}
							]
						},
						{
							"id": 20,
							"name": "COCOON_TEMPLATES",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 21,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 22,
									"character": 35
								}
							]
						},
						{
							"id": 18,
							"name": "COCOON_VERSIONS",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 19,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 18,
									"character": 34
								}
							]
						},
						{
							"id": 22,
							"name": "CREATE_PROJECT_GITHUB",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 23,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 26,
									"character": 40
								}
							]
						},
						{
							"id": 24,
							"name": "CREATE_PROJECT_URL",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 25,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 30,
									"character": 37
								}
							]
						},
						{
							"id": 26,
							"name": "CREATE_PROJECT_ZIP",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 27,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 34,
									"character": 37
								}
							]
						},
						{
							"id": 70,
							"name": "REFRESH_TOKEN_PARAMETER",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 71,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 94,
									"character": 42
								}
							]
						},
						{
							"id": 28,
							"name": "SIGNING_KEYS",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 29,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 38,
									"character": 31
								}
							]
						},
						{
							"id": 30,
							"name": "USER_PROFILE",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 31,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 42,
									"character": 31
								}
							]
						},
						{
							"id": 35,
							"name": "COMPILE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 36,
									"name": "COMPILE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 37,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 50,
									"character": 22
								}
							]
						},
						{
							"id": 38,
							"name": "COMPILE_DEVAPP",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "COMPILE_DEVAPP",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 40,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 54,
									"character": 29
								}
							]
						},
						{
							"id": 41,
							"name": "CONFIG",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 42,
									"name": "CONFIG",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 43,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 58,
									"character": 21
								}
							]
						},
						{
							"id": 61,
							"name": "CREATE_SIGNING_KEY",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 62,
									"name": "CREATE_SIGNING_KEY",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 63,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 82,
									"character": 33
								}
							]
						},
						{
							"id": 50,
							"name": "ICON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 51,
									"name": "ICON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 52,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 53,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											},
											"defaultValue": " Platform.ImplicitDefault"
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 70,
									"character": 19
								}
							]
						},
						{
							"id": 32,
							"name": "PROJECT",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 33,
									"name": "PROJECT",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 34,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 46,
									"character": 22
								}
							]
						},
						{
							"id": 64,
							"name": "PROJECT_SIGNING_KEY",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 65,
									"name": "PROJECT_SIGNING_KEY",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 66,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 67,
											"name": "signingKeyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 86,
									"character": 34
								}
							]
						},
						{
							"id": 58,
							"name": "SIGNING_KEY",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 59,
									"name": "SIGNING_KEY",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 60,
											"name": "signingKeyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 78,
									"character": 26
								}
							]
						},
						{
							"id": 54,
							"name": "SPLASH",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 55,
									"name": "SPLASH",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 56,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 57,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											},
											"defaultValue": " Platform.ExplicitDefault"
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 74,
									"character": 21
								}
							]
						},
						{
							"id": 44,
							"name": "SYNC_GITHUB",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "SYNC_GITHUB",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 46,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 62,
									"character": 26
								}
							]
						},
						{
							"id": 47,
							"name": "SYNC_URL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 48,
									"name": "SYNC_URL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 49,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/api-url.ts",
									"line": 66,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								68,
								12,
								16,
								20,
								18,
								22,
								24,
								26,
								70,
								28,
								30
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								35,
								38,
								41,
								61,
								50,
								32,
								64,
								58,
								54,
								44,
								47
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 5,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						11
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/api-url.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 154,
			"name": "\"lib/cocoon-api\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/cocoon-api.ts",
			"children": [
				{
					"id": 155,
					"name": "CocoonAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 156,
							"name": "credentials",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 157,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ICredentialStorage",
										"id": 94
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cocoon-api.ts",
									"line": 16,
									"character": 30
								}
							]
						},
						{
							"id": 158,
							"name": "checkAPIAccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 159,
									"name": "checkAPIAccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if the API access works.",
										"returns": "If the API access works.\n"
									},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cocoon-api.ts",
									"line": 24,
									"character": 29
								}
							]
						},
						{
							"id": 166,
							"name": "closeAPIAccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 167,
									"name": "closeAPIAccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes the stored credentials."
									},
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cocoon-api.ts",
									"line": 51,
									"character": 29
								}
							]
						},
						{
							"id": 168,
							"name": "getCocoonTemplates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 169,
									"name": "getCocoonTemplates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of the available templates for Cocoon.io projects from the API.",
										"returns": "Promise of the list of the available templates for Cocoon.io projects.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"isArray": true,
												"name": "ICocoonTemplate",
												"id": 124
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cocoon-api.ts",
									"line": 59,
									"character": 33
								}
							]
						},
						{
							"id": 170,
							"name": "getCocoonVersions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 171,
									"name": "getCocoonVersions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of the available Cocoon.io versions.",
										"returns": "Promise of the list of the available Cocoon.io versions.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"isArray": true,
												"name": "ICocoonVersion",
												"id": 132
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cocoon-api.ts",
									"line": 78,
									"character": 32
								}
							]
						},
						{
							"id": 172,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 173,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Make a request to the API with your credentials.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 174,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "HTTP options of the request."
											},
											"type": {
												"type": "reference",
												"name": "RequestOptions"
											}
										},
										{
											"id": 175,
											"name": "addCredentials",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set to false in case you don't want to automatically add your credentials to the API."
											},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "reference",
										"name": "Request"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cocoon-api.ts",
									"line": 99,
									"character": 22
								}
							]
						},
						{
							"id": 160,
							"name": "setupAPIAccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 161,
									"name": "setupAPIAccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Prepares the API to be used. After successfully setting up the API access, you can use the whole SDK."
									},
									"parameters": [
										{
											"id": 162,
											"name": "accessToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Access token provided by the Cocoon.io server."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 163,
											"name": "refreshToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Refresh token provided by the Cocoon.io server."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 164,
											"name": "expiration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Time, in seconds, the access token is valid."
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 165,
											"name": "apiURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "URL where the Cocoon.io API is located.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cocoon-api.ts",
									"line": 39,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								156
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								158,
								166,
								168,
								170,
								172,
								160
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 14,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						155
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/cocoon-api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 278,
			"name": "\"lib/compilation\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/compilation.ts",
			"children": [
				{
					"id": 279,
					"name": "Compilation",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 288,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 289,
									"name": "new Compilation",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 290,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										},
										{
											"id": 291,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Compilation",
										"id": 279
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 32,
									"character": 25
								}
							]
						},
						{
							"id": 280,
							"name": "downloadLink",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 281,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 10,
									"character": 24
								}
							]
						},
						{
							"id": 282,
							"name": "error",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 283,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 16,
									"character": 17
								}
							]
						},
						{
							"id": 284,
							"name": "platform",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 285,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 2
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 20,
									"character": 20
								}
							]
						},
						{
							"id": 286,
							"name": "status",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 287,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Status",
										"id": 221
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 24,
									"character": 18
								}
							]
						},
						{
							"id": 292,
							"name": "isDevApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 293,
									"name": "isDevApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if the compilations is for a DevApp.",
										"returns": "\n"
									},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 46,
									"character": 16
								}
							]
						},
						{
							"id": 294,
							"name": "isErred",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 295,
									"name": "isErred",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if the compilation erred.",
										"returns": "\n"
									},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 54,
									"character": 15
								}
							]
						},
						{
							"id": 296,
							"name": "isReady",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 297,
									"name": "isReady",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if the compilation has finished correctly.",
										"returns": "\n"
									},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/compilation.ts",
									"line": 62,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								288
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								280,
								282,
								284,
								286
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								292,
								294,
								296
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 9,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						279
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/compilation.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 108,
			"name": "\"lib/cookie-credential-storage\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/cookie-credential-storage.ts",
			"children": [
				{
					"id": 109,
					"name": "CookieCredentialStorage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 110,
							"name": "getAccessToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 111,
									"name": "getAccessToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.getAccessToken",
										"id": 96
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-credential-storage.ts",
									"line": 10,
									"character": 22
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getAccessToken",
								"id": 95
							}
						},
						{
							"id": 116,
							"name": "getRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 117,
									"name": "getRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.getRefreshToken",
										"id": 102
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-credential-storage.ts",
									"line": 21,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getRefreshToken",
								"id": 101
							}
						},
						{
							"id": 121,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.logout",
										"id": 107
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-credential-storage.ts",
									"line": 29,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.logout",
								"id": 106
							}
						},
						{
							"id": 112,
							"name": "setAccessToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "setAccessToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 114,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 115,
											"name": "expires",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": " this.DEFAULT_EXPIRATION"
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.setAccessToken",
										"id": 98
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-credential-storage.ts",
									"line": 14,
									"character": 22
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setAccessToken",
								"id": 97
							}
						},
						{
							"id": 118,
							"name": "setRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 119,
									"name": "setRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 120,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.setRefreshToken",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-credential-storage.ts",
									"line": 25,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setRefreshToken",
								"id": 103
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								110,
								116,
								121,
								112,
								118
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-credential-storage.ts",
							"line": 6,
							"character": 44
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ICredentialStorage",
							"id": 94
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						109
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/cookie-credential-storage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 72,
			"name": "\"lib/cookie-helper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/cookie-helper.ts",
			"children": [
				{
					"id": 73,
					"name": "CookieHelper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 77,
							"name": "getItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 78,
									"name": "getItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 79,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-helper.ts",
									"line": 8,
									"character": 22
								}
							]
						},
						{
							"id": 74,
							"name": "hasItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 75,
									"name": "hasItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 76,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-helper.ts",
									"line": 4,
									"character": 22
								}
							]
						},
						{
							"id": 88,
							"name": "removeItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 89,
									"name": "removeItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 90,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 91,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 92,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-helper.ts",
									"line": 23,
									"character": 25
								}
							]
						},
						{
							"id": 80,
							"name": "setItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 81,
									"name": "setItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 82,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 83,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 84,
											"name": "expires",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 85,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 86,
											"name": "domain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 87,
											"name": "secure",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/cookie-helper.ts",
									"line": 14,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								77,
								74,
								88,
								80
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-helper.ts",
							"line": 3,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						73
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/cookie-helper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 176,
			"name": "\"lib/enums/e-grant-type\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/enums/e-grant-type.ts",
			"children": [
				{
					"id": 177,
					"name": "GrantType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 178,
							"name": "AuthorizationCode",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-grant-type.ts",
									"line": 4,
									"character": 18
								}
							],
							"defaultValue": " \"authorization_code\" as any"
						},
						{
							"id": 179,
							"name": "ClientCredentials",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-grant-type.ts",
									"line": 5,
									"character": 18
								}
							],
							"defaultValue": " \"client_credentials\" as any"
						},
						{
							"id": 180,
							"name": "Implicit",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-grant-type.ts",
									"line": 6,
									"character": 9
								}
							],
							"defaultValue": " \"implicit\" as any"
						},
						{
							"id": 181,
							"name": "Password",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-grant-type.ts",
									"line": 7,
									"character": 9
								}
							],
							"defaultValue": " \"password\" as any"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								178,
								179,
								180,
								181
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/enums/e-grant-type.ts",
							"line": 3,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						177
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/e-grant-type.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"lib/enums/e-platform\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/enums/e-platform.ts",
			"children": [
				{
					"id": 2,
					"name": "Platform",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 3,
							"name": "Android",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-platform.ts",
									"line": 4,
									"character": 8
								}
							],
							"defaultValue": " \"android\" as any"
						},
						{
							"id": 4,
							"name": "ExplicitDefault",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-platform.ts",
									"line": 5,
									"character": 16
								}
							],
							"defaultValue": " \"default\" as any"
						},
						{
							"id": 5,
							"name": "IOS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-platform.ts",
									"line": 6,
									"character": 4
								}
							],
							"defaultValue": " \"ios\" as any"
						},
						{
							"id": 6,
							"name": "ImplicitDefault",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-platform.ts",
									"line": 7,
									"character": 16
								}
							],
							"defaultValue": " \"\" as any"
						},
						{
							"id": 7,
							"name": "MacOS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-platform.ts",
									"line": 8,
									"character": 6
								}
							],
							"defaultValue": " \"osx\" as any"
						},
						{
							"id": 8,
							"name": "Ubuntu",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-platform.ts",
									"line": 9,
									"character": 7
								}
							],
							"defaultValue": " \"ubuntu\" as any"
						},
						{
							"id": 9,
							"name": "Windows",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-platform.ts",
									"line": 10,
									"character": 8
								}
							],
							"defaultValue": " \"windows\" as any"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3,
								4,
								5,
								6,
								7,
								8,
								9
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 3,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/e-platform.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 220,
			"name": "\"lib/enums/e-status\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/enums/e-status.ts",
			"children": [
				{
					"id": 221,
					"name": "Status",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 224,
							"name": "Compiling",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-status.ts",
									"line": 6,
									"character": 10
								}
							],
							"defaultValue": " \"compiling\" as any"
						},
						{
							"id": 225,
							"name": "Completed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-status.ts",
									"line": 7,
									"character": 10
								}
							],
							"defaultValue": " \"completed\" as any"
						},
						{
							"id": 222,
							"name": "Created",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-status.ts",
									"line": 4,
									"character": 8
								}
							],
							"defaultValue": " \"created\" as any"
						},
						{
							"id": 226,
							"name": "Disabled",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-status.ts",
									"line": 8,
									"character": 9
								}
							],
							"defaultValue": " \"disabled\" as any"
						},
						{
							"id": 223,
							"name": "Waiting",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/enums/e-status.ts",
									"line": 5,
									"character": 8
								}
							],
							"defaultValue": " \"waiting\" as any"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								224,
								225,
								222,
								226,
								223
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/enums/e-status.ts",
							"line": 3,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						221
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/e-status.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 182,
			"name": "\"lib/interfaces/i-access-token\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-access-token.ts",
			"children": [
				{
					"id": 183,
					"name": "IAccessToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 184,
							"name": "access_token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-access-token.ts",
									"line": 4,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 185,
							"name": "expires_in",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-access-token.ts",
									"line": 5,
									"character": 11
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 186,
							"name": "refresh_token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-access-token.ts",
									"line": 6,
									"character": 14
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								184,
								185,
								186
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-access-token.ts",
							"line": 3,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						183
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-access-token.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 123,
			"name": "\"lib/interfaces/i-cocoon-template\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-cocoon-template.ts",
			"children": [
				{
					"id": 124,
					"name": "ICocoonTemplate",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 126,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-template.ts",
									"line": 5,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 130,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-template.ts",
									"line": 9,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 128,
							"name": "github_url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-template.ts",
									"line": 7,
									"character": 11
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 127,
							"name": "image_url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-template.ts",
									"line": 6,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 125,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-template.ts",
									"line": 4,
									"character": 5
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 129,
							"name": "orientation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-template.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								126,
								130,
								128,
								127,
								125,
								129
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-template.ts",
							"line": 3,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						124
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-cocoon-template.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 131,
			"name": "\"lib/interfaces/i-cocoon-version\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-cocoon-version.ts",
			"children": [
				{
					"id": 132,
					"name": "ICocoonVersion",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 134,
							"name": "default",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-version.ts",
									"line": 5,
									"character": 8
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 133,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-version.ts",
									"line": 4,
									"character": 5
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 135,
							"name": "platforms",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-cocoon-version.ts",
									"line": 6,
									"character": 10
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reflection",
										"declaration": {
											"id": 136,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 137,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "lib/interfaces/i-cocoon-version.ts",
															"line": 6,
															"character": 18
														}
													],
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												},
												{
													"id": 138,
													"name": "version",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "lib/interfaces/i-cocoon-version.ts",
															"line": 6,
															"character": 35
														}
													],
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														137,
														138
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/interfaces/i-cocoon-version.ts",
													"line": 6,
													"character": 13
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								134,
								133,
								135
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-version.ts",
							"line": 3,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						132
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-cocoon-version.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 93,
			"name": "\"lib/interfaces/i-credential-storage\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-credential-storage.ts",
			"children": [
				{
					"id": 94,
					"name": "ICredentialStorage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 95,
							"name": "getAccessToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 96,
									"name": "getAccessToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-credential-storage.ts",
									"line": 4,
									"character": 15
								}
							]
						},
						{
							"id": 101,
							"name": "getRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 102,
									"name": "getRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-credential-storage.ts",
									"line": 6,
									"character": 16
								}
							]
						},
						{
							"id": 106,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 107,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-credential-storage.ts",
									"line": 8,
									"character": 7
								}
							]
						},
						{
							"id": 97,
							"name": "setAccessToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 98,
									"name": "setAccessToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 99,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 100,
											"name": "expires",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-credential-storage.ts",
									"line": 5,
									"character": 15
								}
							]
						},
						{
							"id": 103,
							"name": "setRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 104,
									"name": "setRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 105,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-credential-storage.ts",
									"line": 7,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								95,
								101,
								106,
								97,
								103
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-credential-storage.ts",
							"line": 3,
							"character": 35
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "CookieCredentialStorage",
							"id": 109
						},
						{
							"type": "reference",
							"name": "MemoryCredentialStorage",
							"id": 140
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						94
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-credential-storage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 600,
			"name": "\"lib/interfaces/i-payment-plan\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-payment-plan.ts",
			"children": [
				{
					"id": 601,
					"name": "IPaymentPlan",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 602,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-payment-plan.ts",
									"line": 4,
									"character": 5
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								602
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-payment-plan.ts",
							"line": 3,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						601
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-payment-plan.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 231,
			"name": "\"lib/interfaces/i-project-data\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-project-data.ts",
			"children": [
				{
					"id": 232,
					"name": "IProjectData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 236,
							"name": "build_count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 11,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 242,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 14,
									"character": 7
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 247,
							"name": "date_compiled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 19,
									"character": 14
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 245,
							"name": "date_created",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 246,
							"name": "date_updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 18,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 256,
							"name": "devapp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 22,
									"character": 7
								}
							],
							"type": {
								"type": "instrinct",
								"isArray": true,
								"name": "string"
							}
						},
						{
							"id": 252,
							"name": "download",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 253,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 254,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 255,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-project-data.ts",
											"line": 21,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 261,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 24,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 262,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 263,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 264,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-project-data.ts",
											"line": 24,
											"character": 7
										}
									]
								}
							}
						},
						{
							"id": 244,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 16,
									"character": 5
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 265,
							"name": "icons",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 25,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 266,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 267,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 268,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-project-data.ts",
											"line": 25,
											"character": 7
										}
									]
								}
							}
						},
						{
							"id": 233,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 8,
									"character": 3
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 257,
							"name": "keys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 23,
									"character": 5
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 259,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 260,
													"name": "platform",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "ISigningKeyData",
												"id": 228
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-project-data.ts",
											"line": 23,
											"character": 6
										}
									]
								}
							}
						},
						{
							"id": 238,
							"name": "origin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 13,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 239,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 240,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 241,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-project-data.ts",
											"line": 13,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 235,
							"name": "package",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 273,
							"name": "platforms",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 27,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"isArray": true,
								"name": "Platform",
								"id": 2
							}
						},
						{
							"id": 243,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 269,
							"name": "splashes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 26,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 270,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 271,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 272,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-project-data.ts",
											"line": 26,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 248,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 20,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 249,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 250,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 251,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Status",
												"id": 221
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-project-data.ts",
											"line": 20,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 234,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 9,
									"character": 6
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 237,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 12,
									"character": 8
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								236,
								242,
								247,
								245,
								246,
								256,
								252,
								261,
								244,
								265,
								233,
								257,
								238,
								235,
								273,
								243,
								269,
								248,
								234,
								237
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 7,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						232
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-project-data.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 274,
			"name": "\"lib/interfaces/i-repository-data\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-repository-data.ts",
			"children": [
				{
					"id": 275,
					"name": "IRepositoryData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 277,
							"name": "branch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-repository-data.ts",
									"line": 5,
									"character": 7
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 276,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-repository-data.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								277,
								276
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-repository-data.ts",
							"line": 3,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						275
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-repository-data.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 227,
			"name": "\"lib/interfaces/i-signing-key-data\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-signing-key-data.ts",
			"children": [
				{
					"id": 228,
					"name": "ISigningKeyData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 229,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-signing-key-data.ts",
									"line": 4,
									"character": 3
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 230,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-signing-key-data.ts",
									"line": 5,
									"character": 6
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								229,
								230
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-signing-key-data.ts",
							"line": 3,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						228
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-signing-key-data.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 603,
			"name": "\"lib/interfaces/i-user-data\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/interfaces/i-user-data.ts",
			"children": [
				{
					"id": 604,
					"name": "IUserData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 612,
							"name": "connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"isArray": true,
								"name": "string"
							}
						},
						{
							"id": 607,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 9,
									"character": 6
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 610,
							"name": "eula",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 12,
									"character": 5
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 605,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 7,
									"character": 3
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 613,
							"name": "keys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 15,
									"character": 5
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 614,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 615,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 616,
													"name": "platform",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "ISigningKeyData",
												"id": 228
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-user-data.ts",
											"line": 15,
											"character": 6
										}
									]
								}
							}
						},
						{
							"id": 609,
							"name": "lastname",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 618,
							"name": "migration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						},
						{
							"id": 608,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 10,
									"character": 5
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 611,
							"name": "plan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 13,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "IPaymentPlan",
								"id": 601
							}
						},
						{
							"id": 617,
							"name": "platforms",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"isArray": true,
								"name": "string"
							}
						},
						{
							"id": 606,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								612,
								607,
								610,
								605,
								613,
								609,
								618,
								608,
								611,
								617,
								606
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 6,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						604
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-user-data.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 139,
			"name": "\"lib/memory-credential-storage\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/memory-credential-storage.ts",
			"children": [
				{
					"id": 140,
					"name": "MemoryCredentialStorage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 141,
							"name": "getAccessToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 142,
									"name": "getAccessToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.getAccessToken",
										"id": 96
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/memory-credential-storage.ts",
									"line": 12,
									"character": 22
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getAccessToken",
								"id": 95
							}
						},
						{
							"id": 147,
							"name": "getRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 148,
									"name": "getRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.getRefreshToken",
										"id": 102
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/memory-credential-storage.ts",
									"line": 24,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getRefreshToken",
								"id": 101
							}
						},
						{
							"id": 152,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 153,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.logout",
										"id": 107
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/memory-credential-storage.ts",
									"line": 32,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.logout",
								"id": 106
							}
						},
						{
							"id": 143,
							"name": "setAccessToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 144,
									"name": "setAccessToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 145,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 146,
											"name": "expires",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": " this.DEFAULT_EXPIRATION"
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.setAccessToken",
										"id": 98
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/memory-credential-storage.ts",
									"line": 16,
									"character": 22
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setAccessToken",
								"id": 97
							}
						},
						{
							"id": 149,
							"name": "setRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 150,
									"name": "setRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 151,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICredentialStorage.setRefreshToken",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/memory-credential-storage.ts",
									"line": 28,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setRefreshToken",
								"id": 103
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								141,
								147,
								152,
								143,
								149
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/memory-credential-storage.ts",
							"line": 5,
							"character": 44
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ICredentialStorage",
							"id": 94
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						140
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/memory-credential-storage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 187,
			"name": "\"lib/oauth\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/oauth.ts",
			"children": [
				{
					"id": 188,
					"name": "OAuth",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 189,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 190,
									"name": "new OAuth",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 191,
											"name": "grantType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "GrantType",
														"id": 177
													},
													{
														"type": "instrinct",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 192,
											"name": "clientId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 193,
											"name": "clientSecret",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 194,
											"name": "redirectURI",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 195,
											"name": "oAuthURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											},
											"defaultValue": "\"https://cloud.cocoon.io/oauth/\""
										}
									],
									"type": {
										"type": "reference",
										"name": "OAuth",
										"id": 188
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 29,
									"character": 23
								}
							]
						},
						{
							"id": 196,
							"name": "accessTokenURL",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 197,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 40,
									"character": 26
								}
							]
						},
						{
							"id": 198,
							"name": "authorizationURL",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 199,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 44,
									"character": 28
								}
							]
						},
						{
							"id": 200,
							"name": "logoutURL",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 201,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 48,
									"character": 21
								}
							]
						},
						{
							"id": 202,
							"name": "authorizeAuthorizationCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 203,
									"name": "authorizeAuthorizationCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the URL where the user can authorize the application following the Authorization Code OAuth flow.",
										"returns": "The URL where the user can authorize the application.\n"
									},
									"parameters": [
										{
											"id": 204,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Scope of the access the application requests."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 57,
									"character": 34
								}
							]
						},
						{
							"id": 211,
							"name": "authorizeImplicit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 212,
									"name": "authorizeImplicit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the URL where the user can authorize the application following the Implicit OAuth flow.",
										"returns": "The URL where the user can authorize the application.\n"
									},
									"parameters": [
										{
											"id": 213,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Scope of the access the application requests."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 140,
									"character": 25
								}
							]
						},
						{
							"id": 218,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 219,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Log out of the API.",
										"returns": "Promise of a successful logout.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 194,
									"character": 14
								}
							]
						},
						{
							"id": 205,
							"name": "tokenExchangeAuthorizationCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 206,
									"name": "tokenExchangeAuthorizationCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Exchange the code you got after the user authorized the application for the access token following\nthe Authorization Code OAuth flow.",
										"returns": "Promise of the access token.\n"
									},
									"parameters": [
										{
											"id": 207,
											"name": "pCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Code found in the redirect URL, as a parameter, after the user authorizes the application."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 208,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Random string present in the redirect URL, as a parameter, after the user authorizes the application.\nThis object created it when generating the authorization URL.\nThe server should have returned the same string and will be tested now."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAccessToken",
												"id": 183
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 81,
									"character": 38
								}
							]
						},
						{
							"id": 209,
							"name": "tokenExchangeClientCredentials",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 210,
									"name": "tokenExchangeClientCredentials",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 117,
									"character": 38
								}
							]
						},
						{
							"id": 214,
							"name": "tokenExchangePassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 215,
									"name": "tokenExchangePassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Exchange a username and password for the access token following the Password OAuth flow.",
										"returns": "Promise of the access token.\n"
									},
									"parameters": [
										{
											"id": 216,
											"name": "pUsername",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Username of a user."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 217,
											"name": "pPassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Password of a user."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAccessToken",
												"id": 183
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/oauth.ts",
									"line": 159,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								196,
								198,
								200
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								202,
								211,
								218,
								205,
								209,
								214
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 9,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/oauth.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 385,
			"name": "\"lib/project\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/project.ts",
			"children": [
				{
					"id": 386,
					"name": "Project",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 431,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 432,
									"name": "new Project",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 433,
											"name": "projectData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Project",
										"id": 386
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 120,
									"character": 29
								}
							]
						},
						{
							"id": 393,
							"name": "bundleID",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 394,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 395,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 396,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 34,
									"character": 20
								},
								{
									"fileName": "lib/project.ts",
									"line": 38,
									"character": 20
								}
							]
						},
						{
							"id": 412,
							"name": "compilations",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 413,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 414,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 415,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 416,
															"name": "platform",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Compilation",
														"id": 279
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/project.ts",
													"line": 82,
													"character": 27
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 82,
									"character": 24
								}
							]
						},
						{
							"id": 429,
							"name": "configURL",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 430,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 98,
									"character": 21
								}
							]
						},
						{
							"id": 406,
							"name": "dateCompiled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 407,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 70,
									"character": 24
								}
							]
						},
						{
							"id": 408,
							"name": "dateCreated",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 409,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 74,
									"character": 23
								}
							]
						},
						{
							"id": 410,
							"name": "dateUpdated",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 411,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 78,
									"character": 23
								}
							]
						},
						{
							"id": 417,
							"name": "errors",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 418,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 419,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 420,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 421,
															"name": "p",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/project.ts",
													"line": 86,
													"character": 21
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 86,
									"character": 18
								}
							]
						},
						{
							"id": 387,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 388,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 14,
									"character": 14
								}
							]
						},
						{
							"id": 422,
							"name": "keys",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 423,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 424,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 425,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 426,
															"name": "platform",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "SigningKey",
														"id": 372
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/project.ts",
													"line": 90,
													"character": 19
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 90,
									"character": 16
								}
							]
						},
						{
							"id": 389,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 390,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 391,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 392,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 18,
									"character": 16
								},
								{
									"fileName": "lib/project.ts",
									"line": 22,
									"character": 16
								}
							]
						},
						{
							"id": 401,
							"name": "origin",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"getSignature": [
								{
									"id": 402,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 403,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 404,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 405,
															"name": "p",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/project.ts",
													"line": 66,
													"character": 14
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 66,
									"character": 11
								}
							]
						},
						{
							"id": 427,
							"name": "sourceURL",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 428,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 94,
									"character": 21
								}
							]
						},
						{
							"id": 397,
							"name": "version",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 398,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 399,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 400,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 50,
									"character": 19
								},
								{
									"fileName": "lib/project.ts",
									"line": 54,
									"character": 19
								}
							]
						},
						{
							"id": 486,
							"name": "assignSigningKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 487,
									"name": "assignSigningKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Assigns a singing key to the correspondent platform of the project. Next compilations will try to use the key.\nIf there was another key assigned to the platform the new key overwrites it.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 488,
											"name": "signingKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Signing key to assign."
											},
											"type": {
												"type": "reference",
												"name": "SigningKey",
												"id": 372
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 366,
									"character": 24
								}
							]
						},
						{
							"id": 469,
							"name": "compile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 470,
									"name": "compile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Places the project in the compilation queue.",
										"returns": "Promise of a successful operation.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 287,
									"character": 15
								}
							]
						},
						{
							"id": 471,
							"name": "compileDevApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 472,
									"name": "compileDevApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Places a DevApp of the project in the compilation queue.",
										"returns": "Promise of a successful operation.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 295,
									"character": 21
								}
							]
						},
						{
							"id": 492,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 493,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes the project.",
										"returns": "Promise of a successful operation.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 405,
									"character": 14
								}
							]
						},
						{
							"id": 438,
							"name": "getConfigXML",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 439,
									"name": "getConfigXML",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a sugar for the XML configuration of the project.",
										"returns": "Promise of a sugar for the XML configuration of the project.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "XMLSugar"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 159,
									"character": 20
								}
							]
						},
						{
							"id": 440,
							"name": "getIconBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 441,
									"name": "getIconBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the icon of the project.",
										"returns": "Promise of the icon of the project.\n"
									},
									"parameters": [
										{
											"id": 442,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to get the icon. If not set the default icon will be fetched."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Blob"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 180,
									"character": 19
								}
							]
						},
						{
							"id": 434,
							"name": "getLastUse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 435,
									"name": "getLastUse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the date of the last usage of the project.",
										"returns": "Date of the last usage of the project.\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 130,
									"character": 18
								}
							]
						},
						{
							"id": 447,
							"name": "getSplashBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 448,
									"name": "getSplashBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the splash of the project.",
										"returns": "Promise of the splash of the project.\n"
									},
									"parameters": [
										{
											"id": 449,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to get the splash. If not set the default splash will be fetched."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Blob"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 199,
									"character": 21
								}
							]
						},
						{
							"id": 436,
							"name": "isCompiling",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 437,
									"name": "isCompiling",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if there is at least an ongoing compilation.",
										"returns": "If there is at least an ongoing compilation.\n"
									},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 142,
									"character": 19
								}
							]
						},
						{
							"id": 473,
							"name": "refresh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 474,
									"name": "refresh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the project from Cocoon.io.",
										"returns": "Promise of a successful operation.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 303,
									"character": 15
								}
							]
						},
						{
							"id": 475,
							"name": "refreshCocoon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 476,
									"name": "refreshCocoon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads the current config.xml extracted from the sugar.",
										"returns": "Promise of a successful operation.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 319,
									"character": 21
								}
							]
						},
						{
							"id": 477,
							"name": "refreshUntilCompleted",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 478,
									"name": "refreshUntilCompleted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the project from Cocoon.io until every compilations is completed."
									},
									"parameters": [
										{
											"id": 479,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Function that will be called for each attempt to check if the compilations are completed."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 480,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 481,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 482,
																	"name": "completed",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "boolean"
																	}
																},
																{
																	"id": 483,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "instrinct",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "lib/project.ts",
															"line": 336,
															"character": 39
														}
													]
												}
											}
										},
										{
											"id": 484,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Interval between fetches."
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": " this.DEFAULT_WAIT_TIME"
										},
										{
											"id": 485,
											"name": "maxWaitTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Maximum time to wait.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": " this.MAX_WAIT_TIME"
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 336,
									"character": 29
								}
							]
						},
						{
							"id": 489,
							"name": "removeSigningKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 490,
									"name": "removeSigningKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes the signing key assigned to the indicated project platform.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 491,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to remove the signing key from."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 383,
									"character": 24
								}
							]
						},
						{
							"id": 443,
							"name": "setIconBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 444,
									"name": "setIconBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the icon of the project.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 445,
											"name": "icon",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Image to use as new icon. Recommended 2048x2048 PNG."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 446,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to set the icon. If not set the default icon will be updated."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 190,
									"character": 19
								}
							]
						},
						{
							"id": 450,
							"name": "setSplashBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 451,
									"name": "setSplashBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the splash of the project.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 452,
											"name": "splash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Image to use as new splash. Recommended 2048x2048 PNG."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 453,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to set the splash. If not set the default splash will be updated."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 209,
									"character": 21
								}
							]
						},
						{
							"id": 466,
							"name": "updateConfigXml",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 467,
									"name": "updateConfigXml",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the config.xml file of the project.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 468,
											"name": "xml",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New config.xml for the project."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 270,
									"character": 23
								}
							]
						},
						{
							"id": 460,
							"name": "updateRepository",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 461,
									"name": "updateRepository",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the project providing a git repository to clone.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 462,
											"name": "repo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 463,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 465,
															"name": "branch",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/project.ts",
																	"line": 253,
																	"character": 52
																}
															],
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														},
														{
															"id": 464,
															"name": "url",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "lib/project.ts",
																	"line": 253,
																	"character": 36
																}
															],
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																465,
																464
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/project.ts",
															"line": 253,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 253,
									"character": 24
								}
							]
						},
						{
							"id": 457,
							"name": "updateURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 458,
									"name": "updateURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the project providing a URL.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 459,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL to fetch the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 235,
									"character": 17
								}
							]
						},
						{
							"id": 454,
							"name": "updateZip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 455,
									"name": "updateZip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the project uploading a zip file.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 456,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Zip file containing the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project.ts",
									"line": 218,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								431
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								393,
								412,
								429,
								406,
								408,
								410,
								417,
								387,
								422,
								389,
								401,
								427,
								397
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								486,
								469,
								471,
								492,
								438,
								440,
								434,
								447,
								436,
								473,
								475,
								477,
								489,
								443,
								450,
								466,
								460,
								457,
								454
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 13,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						386
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/project.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 494,
			"name": "\"lib/project-api\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/project-api.ts",
			"children": [
				{
					"id": 495,
					"name": "ProjectAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 592,
							"name": "assignSigningKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 593,
									"name": "assignSigningKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Assigns a singing key to the correspondent platform of a project. Next compilations will try to use the key.\nIf there was another key assigned to the platform the new key overwrites it.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 594,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to assign the key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 595,
											"name": "signingKeyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the signing key that you want to assign to the project."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 537,
									"character": 31
								}
							]
						},
						{
							"id": 586,
							"name": "compile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 587,
									"name": "compile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Places a project in the compilation queue.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 588,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to compile."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 497,
									"character": 22
								}
							]
						},
						{
							"id": 589,
							"name": "compileDevApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 590,
									"name": "compileDevApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Places a DevApp of a project in the compilation queue.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 591,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to compile a DevApp."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 516,
									"character": 28
								}
							]
						},
						{
							"id": 508,
							"name": "createFromRepository",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 509,
									"name": "createFromRepository",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a project from a git repository to clone.",
										"returns": "Promise of the project created.\n"
									},
									"parameters": [
										{
											"id": 510,
											"name": "repo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
											},
											"type": {
												"type": "reference",
												"name": "IRepositoryData",
												"id": 275
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 96,
									"character": 35
								}
							]
						},
						{
							"id": 511,
							"name": "createFromRepositoryUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 512,
									"name": "createFromRepositoryUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a project from a git repository to clone.",
										"returns": "Promise of the data of the project created.\n"
									},
									"parameters": [
										{
											"id": 513,
											"name": "repo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
											},
											"type": {
												"type": "reference",
												"name": "IRepositoryData",
												"id": 275
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 113,
									"character": 46
								}
							]
						},
						{
							"id": 502,
							"name": "createFromURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 503,
									"name": "createFromURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a project from an URL .",
										"returns": "Promise of the project created.\n"
									},
									"parameters": [
										{
											"id": 504,
											"name": "pUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL to fetch the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 58,
									"character": 28
								}
							]
						},
						{
							"id": 505,
							"name": "createFromURLUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 506,
									"name": "createFromURLUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a project from an URL .",
										"returns": "Promise of the data of the project created.\n"
									},
									"parameters": [
										{
											"id": 507,
											"name": "pUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL to fetch the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 74,
									"character": 39
								}
							]
						},
						{
							"id": 496,
							"name": "createFromZipUpload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 497,
									"name": "createFromZipUpload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a project from a Zip file.",
										"returns": "Promise of the project created.\n"
									},
									"parameters": [
										{
											"id": 498,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Zip file containing the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 18,
									"character": 34
								}
							]
						},
						{
							"id": 499,
							"name": "createFromZipUploadUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 500,
									"name": "createFromZipUploadUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a project from a Zip file.",
										"returns": "Promise of the data of the project created.\n"
									},
									"parameters": [
										{
											"id": 501,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Zip file containing the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 34,
									"character": 45
								}
							]
						},
						{
							"id": 520,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 521,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a project.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 522,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to delete."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 170,
									"character": 21
								}
							]
						},
						{
							"id": 514,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 515,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the information of a project.",
										"returns": "Promise of the project fetched.\n"
									},
									"parameters": [
										{
											"id": 516,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to fetch."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 134,
									"character": 18
								}
							]
						},
						{
							"id": 575,
							"name": "getConfigXml",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 576,
									"name": "getConfigXml",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the config.xml file of a project.",
										"returns": "Promise of the config.xml file of a project.\n"
									},
									"parameters": [
										{
											"id": 577,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to fetch the config.xml."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 437,
									"character": 27
								}
							]
						},
						{
							"id": 527,
							"name": "getIconBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 528,
									"name": "getIconBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the icon of a project.",
										"returns": "Promise of the icon of the project.\n"
									},
									"parameters": [
										{
											"id": 529,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to get the icon."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 530,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to get the icon. If not set the default icon will be fetched."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Blob"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 226,
									"character": 26
								}
							]
						},
						{
							"id": 536,
							"name": "getSplashBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 537,
									"name": "getSplashBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the splash of the project.",
										"returns": "Promise of the splash of the project.\n"
									},
									"parameters": [
										{
											"id": 538,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to get the splash."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 539,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to get the splash. If not set the default splash will be fetched."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Blob"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 271,
									"character": 28
								}
							]
						},
						{
							"id": 517,
							"name": "getUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 518,
									"name": "getUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the information of a project.",
										"returns": "Promise of the data of the project fetched.\n"
									},
									"parameters": [
										{
											"id": 519,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to fetch."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 150,
									"character": 29
								}
							]
						},
						{
							"id": 523,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 524,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a list containing the information of all the project.",
										"returns": "Promise of the list of all the projects.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"isArray": true,
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 188,
									"character": 19
								}
							]
						},
						{
							"id": 525,
							"name": "listUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 526,
									"name": "listUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a list containing the information of all the project.",
										"returns": "Promise of the list of data of all the projects.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"isArray": true,
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 205,
									"character": 30
								}
							]
						},
						{
							"id": 596,
							"name": "removeSigningKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 597,
									"name": "removeSigningKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes the signing key assigned to the indicated project platform.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 598,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to remove the key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 599,
											"name": "signingKeyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the signing key that you want to remove from the project."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 557,
									"character": 31
								}
							]
						},
						{
							"id": 531,
							"name": "setIconBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 532,
									"name": "setIconBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the icon of a project.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 533,
											"name": "icon",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Image to use as new icon. Recommended 2048x2048 PNG."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 534,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to set the icon."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 535,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to set the icon. If not set the default icon will be updated."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 247,
									"character": 26
								}
							]
						},
						{
							"id": 540,
							"name": "setSplashBlob",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 541,
									"name": "setSplashBlob",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the splash of the project.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 542,
											"name": "splash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Image to use as new splash. Recommended 2048x2048 PNG."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 543,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to set the splash."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 544,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Platform to set the splash. If not set the default splash will be updated."
											},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 292,
									"character": 28
								}
							]
						},
						{
							"id": 578,
							"name": "updateConfigXml",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 579,
									"name": "updateConfigXml",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the config.xml file of a project.",
										"returns": "Promise of the project whose config.xml was updated.\n"
									},
									"parameters": [
										{
											"id": 580,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update the config.xml."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 581,
											"name": "xml",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New config.xml for the project."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 457,
									"character": 30
								}
							]
						},
						{
							"id": 582,
							"name": "updateConfigXmlUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 583,
									"name": "updateConfigXmlUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the config.xml file of a project.",
										"returns": "Promise of the date of the project whose config.xml was updated.\n"
									},
									"parameters": [
										{
											"id": 584,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update the config.xml."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 585,
											"name": "xml",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New config.xml for the project."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 474,
									"character": 41
								}
							]
						},
						{
							"id": 561,
							"name": "updateRepository",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 562,
									"name": "updateRepository",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the source code of a project providing a git repository to clone.",
										"returns": "Promise of the project updated.\n"
									},
									"parameters": [
										{
											"id": 563,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 564,
											"name": "repo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 565,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 567,
															"name": "branch",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/project-api.ts",
																	"line": 398,
																	"character": 78
																}
															],
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														},
														{
															"id": 566,
															"name": "url",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "lib/project-api.ts",
																	"line": 398,
																	"character": 62
																}
															],
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																567,
																566
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/project-api.ts",
															"line": 398,
															"character": 56
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 398,
									"character": 31
								}
							]
						},
						{
							"id": 568,
							"name": "updateRepositoryUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 569,
									"name": "updateRepositoryUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the source code of a project providing a git repository to clone.",
										"returns": "Promise of the data of the project updated.\n"
									},
									"parameters": [
										{
											"id": 570,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 571,
											"name": "repo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to 'master' if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 572,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 574,
															"name": "branch",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "lib/project-api.ts",
																	"line": 417,
																	"character": 70
																}
															],
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														},
														{
															"id": 573,
															"name": "url",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "lib/project-api.ts",
																	"line": 417,
																	"character": 54
																}
															],
															"type": {
																"type": "instrinct",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																574,
																573
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/project-api.ts",
															"line": 417,
															"character": 48
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 416,
									"character": 42
								}
							]
						},
						{
							"id": 553,
							"name": "updateURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 554,
									"name": "updateURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the source code of a project providing a URL to fetch it from.",
										"returns": "Promise of the project updated.\n"
									},
									"parameters": [
										{
											"id": 555,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 556,
											"name": "pUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL to fetch the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 358,
									"character": 24
								}
							]
						},
						{
							"id": 557,
							"name": "updateURLUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 558,
									"name": "updateURLUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the source code of a project providing a URL to fetch it from.",
										"returns": "Promise of the data of the project updated.\n"
									},
									"parameters": [
										{
											"id": 559,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 560,
											"name": "pUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "URL to fetch the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 375,
									"character": 35
								}
							]
						},
						{
							"id": 545,
							"name": "updateZip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 546,
									"name": "updateZip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the source code of a project uploading a zip file.",
										"returns": "Promise of the project updated.\n"
									},
									"parameters": [
										{
											"id": 547,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 548,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Zip file containing the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Project",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 316,
									"character": 24
								}
							]
						},
						{
							"id": 549,
							"name": "updateZipUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 550,
									"name": "updateZipUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the source code of a project uploading a zip file.",
										"returns": "Promise of the data of the project updated.\n"
									},
									"parameters": [
										{
											"id": 551,
											"name": "projectId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the project to update."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 552,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Zip file containing the source code. Can contain a config.xml file too."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IProjectData",
												"id": 232
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/project-api.ts",
									"line": 333,
									"character": 35
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								592,
								586,
								589,
								508,
								511,
								502,
								505,
								496,
								499,
								520,
								514,
								575,
								527,
								536,
								517,
								523,
								525,
								596,
								531,
								540,
								578,
								582,
								561,
								568,
								553,
								557,
								545,
								549
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 12,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						495
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/project-api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 371,
			"name": "\"lib/signing-key\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/signing-key.ts",
			"children": [
				{
					"id": 372,
					"name": "SigningKey",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 379,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 380,
									"name": "new SigningKey",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 381,
											"name": "signingKeyData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ISigningKeyData",
												"id": 228
											}
										},
										{
											"id": 382,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Platform",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SigningKey",
										"id": 372
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key.ts",
									"line": 22,
									"character": 29
								}
							]
						},
						{
							"id": 373,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 374,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key.ts",
									"line": 8,
									"character": 14
								}
							]
						},
						{
							"id": 375,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 376,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key.ts",
									"line": 12,
									"character": 16
								}
							]
						},
						{
							"id": 377,
							"name": "platform",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 378,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 2
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key.ts",
									"line": 16,
									"character": 20
								}
							]
						},
						{
							"id": 383,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 384,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the signing key.",
										"returns": "Promise of a successful operation.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key.ts",
									"line": 34,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								379
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								373,
								375,
								377
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								383
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key.ts",
							"line": 7,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						372
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/signing-key.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 298,
			"name": "\"lib/signing-key-api\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/signing-key-api.ts",
			"children": [
				{
					"id": 299,
					"name": "SigningKeyAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 300,
							"name": "createAndroid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 301,
									"name": "createAndroid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an Android signing key.",
										"returns": "Promise of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 302,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 303,
											"name": "pAlias",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A name you will use when you sign your project."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 304,
											"name": "keystore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A binary file that contains a set of private keys."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 305,
											"name": "keystorePassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Password of the keystore."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 306,
											"name": "certificatePassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Password of the certificate used to create the keystore."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SigningKey",
												"id": 372
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 21,
									"character": 28
								}
							]
						},
						{
							"id": 307,
							"name": "createAndroidUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 308,
									"name": "createAndroidUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an Android signing key.",
										"returns": "Promise of the date of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 309,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 310,
											"name": "pAlias",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A name you will use when you sign your project."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 311,
											"name": "keystore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A binary file that contains a set of private keys."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 312,
											"name": "keystorePassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Password of the keystore."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 313,
											"name": "certificatePassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Password of the certificate used to create the keystore."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ISigningKeyData",
												"id": 228
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 42,
									"character": 39
								}
							]
						},
						{
							"id": 314,
							"name": "createIOS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 315,
									"name": "createIOS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an iOS signing key.",
										"returns": "Promise of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 316,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 317,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The password of the p12 certificate."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 318,
											"name": "provisioningProfile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 319,
											"name": "certificate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SigningKey",
												"id": 372
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 80,
									"character": 24
								}
							]
						},
						{
							"id": 320,
							"name": "createIOSUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 321,
									"name": "createIOSUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an iOS signing key.",
										"returns": "Promise of the date of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 322,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 323,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The password of the p12 certificate."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 324,
											"name": "provisioningProfile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 325,
											"name": "certificate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ISigningKeyData",
												"id": 228
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 103,
									"character": 35
								}
							]
						},
						{
							"id": 326,
							"name": "createMacOS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 327,
									"name": "createMacOS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an MacOS signing key.",
										"returns": "Promise of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 328,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 329,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The password of the p12 certificate."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 330,
											"name": "provisioningProfile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 331,
											"name": "certificate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SigningKey",
												"id": 372
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 119,
									"character": 26
								}
							]
						},
						{
							"id": 332,
							"name": "createMacOSUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 333,
									"name": "createMacOSUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an MacOS signing key.",
										"returns": "Promise of the data of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 334,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 335,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The password of the p12 certificate."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 336,
											"name": "provisioningProfile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										},
										{
											"id": 337,
											"name": "certificate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
											},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ISigningKeyData",
												"id": 228
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 142,
									"character": 37
								}
							]
						},
						{
							"id": 338,
							"name": "createWindows",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 339,
									"name": "createWindows",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an Windows signing key.",
										"returns": "Promise of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 340,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 341,
											"name": "pPassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 342,
											"name": "pPackageThumbprint",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 343,
											"name": "pPublisherId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 344,
											"name": "keystore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SigningKey",
												"id": 372
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 156,
									"character": 28
								}
							]
						},
						{
							"id": 345,
							"name": "createWindowsUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 346,
									"name": "createWindowsUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an Windows signing key.",
										"returns": "Promise of the data of the signing key created.\n"
									},
									"parameters": [
										{
											"id": 347,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name for the signing key."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 348,
											"name": "pPassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 349,
											"name": "pPackageThumbprint",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 350,
											"name": "pPublisherId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 351,
											"name": "keystore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ISigningKeyData",
												"id": 228
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 177,
									"character": 39
								}
							]
						},
						{
							"id": 358,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 359,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a signing key.",
										"returns": "Promise of a successful operation.\n"
									},
									"parameters": [
										{
											"id": 360,
											"name": "signingKeyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the signing key to delete."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 261,
									"character": 21
								}
							]
						},
						{
							"id": 352,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 353,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the information of a signing key.",
										"returns": "Promise of the signing key fetched.\n"
									},
									"parameters": [
										{
											"id": 354,
											"name": "signingKeyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the signing key to fetch."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SigningKey",
												"id": 372
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 209,
									"character": 18
								}
							]
						},
						{
							"id": 355,
							"name": "getUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 356,
									"name": "getUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the information of a signing key.",
										"returns": "Promise of the data of the signing key fetched.\n"
									},
									"parameters": [
										{
											"id": 357,
											"name": "signingKeyId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ID of the signing key to fetch."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ISigningKeyData",
												"id": 228
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 235,
									"character": 29
								}
							]
						},
						{
							"id": 361,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 362,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a list containing the information of all the signing keys.",
										"returns": ">} Promise of the list of all the signing keys.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 363,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 364,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 365,
																	"name": "platform",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"isArray": true,
																"name": "SigningKey",
																"id": 372
															}
														}
													],
													"sources": [
														{
															"fileName": "lib/signing-key-api.ts",
															"line": 279,
															"character": 31
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 279,
									"character": 19
								}
							]
						},
						{
							"id": 366,
							"name": "listUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 367,
									"name": "listUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a list containing the information of all the signing keys.",
										"returns": ">} Promise of the list of all the data of the signing keys.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 368,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 369,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 370,
																	"name": "platform",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"isArray": true,
																"name": "ISigningKeyData",
																"id": 228
															}
														}
													],
													"sources": [
														{
															"fileName": "lib/signing-key-api.ts",
															"line": 303,
															"character": 42
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/signing-key-api.ts",
									"line": 303,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								300,
								307,
								314,
								320,
								326,
								332,
								338,
								345,
								358,
								352,
								355,
								361,
								366
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 11,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						299
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/signing-key-api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 619,
			"name": "\"lib/user\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/user.ts",
			"children": [
				{
					"id": 620,
					"name": "User",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 643,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 644,
									"name": "new User",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 645,
											"name": "userData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IUserData",
												"id": 604
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "User",
										"id": 620
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 57,
									"character": 30
								}
							]
						},
						{
							"id": 633,
							"name": "email",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 634,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 635,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 636,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 31,
									"character": 17
								},
								{
									"fileName": "lib/user.ts",
									"line": 35,
									"character": 17
								}
							]
						},
						{
							"id": 637,
							"name": "eula",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 638,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 39,
									"character": 16
								}
							]
						},
						{
							"id": 629,
							"name": "lastName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 630,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 631,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 632,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 23,
									"character": 20
								},
								{
									"fileName": "lib/user.ts",
									"line": 27,
									"character": 20
								}
							]
						},
						{
							"id": 625,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 626,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 627,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 628,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 15,
									"character": 16
								},
								{
									"fileName": "lib/user.ts",
									"line": 19,
									"character": 16
								}
							]
						},
						{
							"id": 639,
							"name": "plan",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 640,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IPaymentPlan",
										"id": 601
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 43,
									"character": 16
								}
							]
						},
						{
							"id": 641,
							"name": "platforms",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 642,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"isArray": true,
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 47,
									"character": 21
								}
							]
						},
						{
							"id": 621,
							"name": "userName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"getSignature": [
								{
									"id": 622,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 623,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 624,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user.ts",
									"line": 7,
									"character": 20
								},
								{
									"fileName": "lib/user.ts",
									"line": 11,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								643
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								633,
								637,
								629,
								625,
								639,
								641,
								621
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 6,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						620
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/user.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 646,
			"name": "\"lib/user-api\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/home/bluesialia/Version_Control/cocoon-cloud-sdk/src/lib/user-api.ts",
			"children": [
				{
					"id": 647,
					"name": "UserAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 648,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 649,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the information of the user.",
										"returns": "Promise of the user.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "User",
												"id": 620
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user-api.ts",
									"line": 15,
									"character": 18
								}
							]
						},
						{
							"id": 650,
							"name": "getUnprocessed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 651,
									"name": "getUnprocessed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the information of the user.",
										"returns": "Promise of the data of the user.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IUserData",
												"id": 604
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/user-api.ts",
									"line": 30,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								648,
								650
							]
						}
					],
					"sources": [
						{
							"fileName": "lib/user-api.ts",
							"line": 10,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						647
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/user-api.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				652,
				10,
				154,
				278,
				108,
				72,
				176,
				1,
				220,
				182,
				123,
				131,
				93,
				600,
				231,
				274,
				227,
				603,
				139,
				187,
				385,
				494,
				371,
				298,
				619,
				646
			]
		}
	]
}