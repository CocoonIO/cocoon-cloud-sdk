{
	"id": 0,
	"name": "Cocoon Cloud SDK",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 167,
			"name": "GrantType",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 168,
					"name": "AuthorizationCode",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-grant-type.ts",
							"line": 4,
							"character": 18
						}
					],
					"defaultValue": " \"authorization_code\" as any"
				},
				{
					"id": 169,
					"name": "ClientCredentials",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-grant-type.ts",
							"line": 5,
							"character": 18
						}
					],
					"defaultValue": " \"client_credentials\" as any"
				},
				{
					"id": 170,
					"name": "Implicit",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-grant-type.ts",
							"line": 6,
							"character": 9
						}
					],
					"defaultValue": " \"implicit\" as any"
				},
				{
					"id": 171,
					"name": "Password",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-grant-type.ts",
							"line": 7,
							"character": 9
						}
					],
					"defaultValue": " \"password\" as any"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						168,
						169,
						170,
						171
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/e-grant-type.ts",
					"line": 3,
					"character": 21
				}
			]
		},
		{
			"id": 1,
			"name": "Platform",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2,
					"name": "Android",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 4,
							"character": 8
						}
					],
					"defaultValue": " \"android\" as any"
				},
				{
					"id": 3,
					"name": "ExplicitDefault",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 5,
							"character": 16
						}
					],
					"defaultValue": " \"default\" as any"
				},
				{
					"id": 4,
					"name": "IOS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 6,
							"character": 4
						}
					],
					"defaultValue": " \"ios\" as any"
				},
				{
					"id": 5,
					"name": "ImplicitDefault",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 7,
							"character": 16
						}
					],
					"defaultValue": " \"\" as any"
				},
				{
					"id": 6,
					"name": "MacOS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 8,
							"character": 6
						}
					],
					"defaultValue": " \"osx\" as any"
				},
				{
					"id": 7,
					"name": "Ubuntu",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 9,
							"character": 7
						}
					],
					"defaultValue": " \"ubuntu\" as any"
				},
				{
					"id": 8,
					"name": "Windows",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-platform.ts",
							"line": 10,
							"character": 8
						}
					],
					"defaultValue": " \"windows\" as any"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						2,
						3,
						4,
						5,
						6,
						7,
						8
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/e-platform.ts",
					"line": 3,
					"character": 20
				}
			]
		},
		{
			"id": 208,
			"name": "Status",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 211,
					"name": "Compiling",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-status.ts",
							"line": 6,
							"character": 10
						}
					],
					"defaultValue": " \"compiling\" as any"
				},
				{
					"id": 212,
					"name": "Completed",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-status.ts",
							"line": 7,
							"character": 10
						}
					],
					"defaultValue": " \"completed\" as any"
				},
				{
					"id": 209,
					"name": "Created",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-status.ts",
							"line": 4,
							"character": 8
						}
					],
					"defaultValue": " \"created\" as any"
				},
				{
					"id": 213,
					"name": "Disabled",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-status.ts",
							"line": 8,
							"character": 9
						}
					],
					"defaultValue": " \"disabled\" as any"
				},
				{
					"id": 210,
					"name": "Waiting",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-status.ts",
							"line": 5,
							"character": 8
						}
					],
					"defaultValue": " \"waiting\" as any"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						211,
						212,
						209,
						213,
						210
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/e-status.ts",
					"line": 3,
					"character": 18
				}
			]
		},
		{
			"id": 627,
			"name": "StorageType",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 628,
					"name": "Cookies",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-storage-type.ts",
							"line": 4,
							"character": 8
						}
					],
					"defaultValue": " \"cookies\" as any"
				},
				{
					"id": 629,
					"name": "Memory",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/enums/e-storage-type.ts",
							"line": 5,
							"character": 7
						}
					],
					"defaultValue": " \"memory\" as any"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						628,
						629
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/enums/e-storage-type.ts",
					"line": 3,
					"character": 23
				}
			]
		},
		{
			"id": 9,
			"name": "APIURL",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 66,
					"name": "ACCESS_TOKEN_PARAMETER",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 67,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 90,
							"character": 41
						}
					]
				},
				{
					"id": 10,
					"name": "BASE",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 11,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 12,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 13,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 6,
							"character": 23
						},
						{
							"fileName": "lib/api-url.ts",
							"line": 10,
							"character": 23
						}
					]
				},
				{
					"id": 14,
					"name": "BASE_PROJECT",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 15,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 14,
							"character": 31
						}
					]
				},
				{
					"id": 18,
					"name": "COCOON_TEMPLATES",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 19,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 22,
							"character": 35
						}
					]
				},
				{
					"id": 16,
					"name": "COCOON_VERSIONS",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 17,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 18,
							"character": 34
						}
					]
				},
				{
					"id": 20,
					"name": "CREATE_PROJECT_GITHUB",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 21,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 26,
							"character": 40
						}
					]
				},
				{
					"id": 22,
					"name": "CREATE_PROJECT_URL",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 23,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 30,
							"character": 37
						}
					]
				},
				{
					"id": 24,
					"name": "CREATE_PROJECT_ZIP",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 25,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 34,
							"character": 37
						}
					]
				},
				{
					"id": 68,
					"name": "REFRESH_TOKEN_PARAMETER",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 69,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 94,
							"character": 42
						}
					]
				},
				{
					"id": 26,
					"name": "SIGNING_KEYS",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 27,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 38,
							"character": 31
						}
					]
				},
				{
					"id": 28,
					"name": "USER_PROFILE",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 29,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 42,
							"character": 31
						}
					]
				},
				{
					"id": 33,
					"name": "COMPILE",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 34,
							"name": "COMPILE",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 35,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 50,
							"character": 22
						}
					]
				},
				{
					"id": 36,
					"name": "COMPILE_DEVAPP",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 37,
							"name": "COMPILE_DEVAPP",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 38,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 54,
							"character": 29
						}
					]
				},
				{
					"id": 39,
					"name": "CONFIG",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 40,
							"name": "CONFIG",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 41,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 58,
							"character": 21
						}
					]
				},
				{
					"id": 59,
					"name": "CREATE_SIGNING_KEY",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 60,
							"name": "CREATE_SIGNING_KEY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 61,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 82,
							"character": 33
						}
					]
				},
				{
					"id": 48,
					"name": "ICON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 49,
							"name": "ICON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 50,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 51,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									},
									"defaultValue": " Platform.ImplicitDefault"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 70,
							"character": 19
						}
					]
				},
				{
					"id": 30,
					"name": "PROJECT",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 31,
							"name": "PROJECT",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 32,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 46,
							"character": 22
						}
					]
				},
				{
					"id": 62,
					"name": "PROJECT_SIGNING_KEY",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 63,
							"name": "PROJECT_SIGNING_KEY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 64,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 65,
									"name": "signingKeyId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 86,
							"character": 34
						}
					]
				},
				{
					"id": 56,
					"name": "SIGNING_KEY",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 57,
							"name": "SIGNING_KEY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 58,
									"name": "signingKeyId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 78,
							"character": 26
						}
					]
				},
				{
					"id": 52,
					"name": "SPLASH",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 53,
							"name": "SPLASH",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 54,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 55,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									},
									"defaultValue": " Platform.ExplicitDefault"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 74,
							"character": 21
						}
					]
				},
				{
					"id": 42,
					"name": "SYNC_GITHUB",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 43,
							"name": "SYNC_GITHUB",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 44,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 62,
							"character": 26
						}
					]
				},
				{
					"id": 45,
					"name": "SYNC_URL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 46,
							"name": "SYNC_URL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 47,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/api-url.ts",
							"line": 66,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						66,
						10,
						14,
						18,
						16,
						20,
						22,
						24,
						68,
						26,
						28
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						33,
						36,
						39,
						59,
						48,
						30,
						62,
						56,
						52,
						42,
						45
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/api-url.ts",
					"line": 5,
					"character": 27
				}
			]
		},
		{
			"id": 146,
			"name": "CocoonAPI",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 147,
					"name": "credentials",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 148,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ICredentialStorage",
								"id": 90
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 16,
							"character": 30
						}
					]
				},
				{
					"id": 149,
					"name": "checkAPIAccess",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 150,
							"name": "checkAPIAccess",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if the API access works.",
								"returns": "If the API access works.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 24,
							"character": 29
						}
					]
				},
				{
					"id": 157,
					"name": "closeAPIAccess",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 158,
							"name": "closeAPIAccess",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the stored credentials."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 51,
							"character": 29
						}
					]
				},
				{
					"id": 159,
					"name": "getCocoonTemplates",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 160,
							"name": "getCocoonTemplates",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of the available templates for Cocoon.io projects from the API.",
								"returns": "Promise of the list of the available templates for Cocoon.io projects.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ICocoonTemplate",
											"id": 118
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 59,
							"character": 33
						}
					]
				},
				{
					"id": 161,
					"name": "getCocoonVersions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 162,
							"name": "getCocoonVersions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of the available Cocoon.io versions.",
								"returns": "Promise of the list of the available Cocoon.io versions.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ICocoonVersion",
											"id": 125
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 78,
							"character": 32
						}
					]
				},
				{
					"id": 163,
					"name": "request",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 164,
							"name": "request",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Make a request to the API with your credentials.",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 165,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "HTTP options of the request."
									},
									"type": {
										"type": "reference",
										"name": "RequestOptions"
									}
								},
								{
									"id": 166,
									"name": "addCredentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Set to false in case you don't want to automatically add your credentials to the API."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"name": "Request"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 99,
							"character": 22
						}
					]
				},
				{
					"id": 151,
					"name": "setupAPIAccess",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 152,
							"name": "setupAPIAccess",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Prepares the API to be used. After successfully setting up the API access, you can use the whole SDK."
							},
							"parameters": [
								{
									"id": 153,
									"name": "accessToken",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Access token provided by the Cocoon.io server."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 154,
									"name": "refreshToken",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Refresh token provided by the Cocoon.io server."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 155,
									"name": "expiration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Time, in seconds, the access token is valid."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 156,
									"name": "apiURL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "URL where the Cocoon.io API is located.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cocoon-api.ts",
							"line": 39,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						147
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						149,
						157,
						159,
						161,
						163,
						151
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/cocoon-api.ts",
					"line": 14,
					"character": 30
				}
			]
		},
		{
			"id": 262,
			"name": "Compilation",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 271,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 272,
							"name": "new Compilation",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 273,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								},
								{
									"id": 274,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Compilation",
								"id": 262
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 32,
							"character": 25
						}
					]
				},
				{
					"id": 263,
					"name": "downloadLink",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 264,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 10,
							"character": 24
						}
					]
				},
				{
					"id": 265,
					"name": "error",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 266,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 16,
							"character": 17
						}
					]
				},
				{
					"id": 267,
					"name": "platform",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 268,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Platform",
								"id": 1
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 20,
							"character": 20
						}
					]
				},
				{
					"id": 269,
					"name": "status",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 270,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Status",
								"id": 208
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 24,
							"character": 18
						}
					]
				},
				{
					"id": 275,
					"name": "isDevApp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 276,
							"name": "isDevApp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the compilations is for a DevApp.",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 46,
							"character": 16
						}
					]
				},
				{
					"id": 277,
					"name": "isErred",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 278,
							"name": "isErred",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the compilation erred.",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 54,
							"character": 15
						}
					]
				},
				{
					"id": 279,
					"name": "isReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 280,
							"name": "isReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if the compilation has finished correctly.",
								"returns": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/compilation.ts",
							"line": 62,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						271
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						263,
						265,
						267,
						269
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						275,
						277,
						279
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/compilation.ts",
					"line": 9,
					"character": 32
				}
			]
		},
		{
			"id": 104,
			"name": "CookieCredentialStorage",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 105,
					"name": "getAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 106,
							"name": "getAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getAccessToken",
								"id": 92
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-credential-storage.ts",
							"line": 10,
							"character": 22
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.getAccessToken",
						"id": 91
					}
				},
				{
					"id": 111,
					"name": "getRefreshToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 112,
							"name": "getRefreshToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getRefreshToken",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-credential-storage.ts",
							"line": 21,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.getRefreshToken",
						"id": 97
					}
				},
				{
					"id": 116,
					"name": "logout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 117,
							"name": "logout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.logout",
								"id": 103
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-credential-storage.ts",
							"line": 29,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.logout",
						"id": 102
					}
				},
				{
					"id": 107,
					"name": "setAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 108,
							"name": "setAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 109,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 110,
									"name": "expires",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": " this.DEFAULT_EXPIRATION"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setAccessToken",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-credential-storage.ts",
							"line": 14,
							"character": 22
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.setAccessToken",
						"id": 93
					}
				},
				{
					"id": 113,
					"name": "setRefreshToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 114,
							"name": "setRefreshToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 115,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setRefreshToken",
								"id": 100
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-credential-storage.ts",
							"line": 25,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.setRefreshToken",
						"id": 99
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						105,
						111,
						116,
						107,
						113
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/cookie-credential-storage.ts",
					"line": 6,
					"character": 44
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ICredentialStorage",
					"id": 90
				}
			]
		},
		{
			"id": 70,
			"name": "CookieHelper",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 74,
					"name": "getItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 75,
							"name": "getItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 76,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-helper.ts",
							"line": 8,
							"character": 22
						}
					]
				},
				{
					"id": 71,
					"name": "hasItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 72,
							"name": "hasItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 73,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-helper.ts",
							"line": 4,
							"character": 22
						}
					]
				},
				{
					"id": 85,
					"name": "removeItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 86,
							"name": "removeItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 87,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 88,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 89,
									"name": "domain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-helper.ts",
							"line": 23,
							"character": 25
						}
					]
				},
				{
					"id": 77,
					"name": "setItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 78,
							"name": "setItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 79,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 80,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 81,
									"name": "expires",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 82,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 83,
									"name": "domain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 84,
									"name": "secure",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/cookie-helper.ts",
							"line": 14,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						74,
						71,
						85,
						77
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/cookie-helper.ts",
					"line": 3,
					"character": 33
				}
			]
		},
		{
			"id": 132,
			"name": "MemoryCredentialStorage",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 133,
					"name": "getAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 134,
							"name": "getAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getAccessToken",
								"id": 92
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/memory-credential-storage.ts",
							"line": 12,
							"character": 22
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.getAccessToken",
						"id": 91
					}
				},
				{
					"id": 139,
					"name": "getRefreshToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 140,
							"name": "getRefreshToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.getRefreshToken",
								"id": 98
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/memory-credential-storage.ts",
							"line": 24,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.getRefreshToken",
						"id": 97
					}
				},
				{
					"id": 144,
					"name": "logout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 145,
							"name": "logout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.logout",
								"id": 103
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/memory-credential-storage.ts",
							"line": 32,
							"character": 14
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.logout",
						"id": 102
					}
				},
				{
					"id": 135,
					"name": "setAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 136,
							"name": "setAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 137,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 138,
									"name": "expires",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": " this.DEFAULT_EXPIRATION"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setAccessToken",
								"id": 94
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/memory-credential-storage.ts",
							"line": 16,
							"character": 22
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.setAccessToken",
						"id": 93
					}
				},
				{
					"id": 141,
					"name": "setRefreshToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 142,
							"name": "setRefreshToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 143,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ICredentialStorage.setRefreshToken",
								"id": 100
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/memory-credential-storage.ts",
							"line": 28,
							"character": 23
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "ICredentialStorage.setRefreshToken",
						"id": 99
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						133,
						139,
						144,
						135,
						141
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/memory-credential-storage.ts",
					"line": 5,
					"character": 44
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "ICredentialStorage",
					"id": 90
				}
			]
		},
		{
			"id": 176,
			"name": "OAuth",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 177,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 178,
							"name": "new OAuth",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 179,
									"name": "grantType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "GrantType",
												"id": 167
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 180,
									"name": "clientId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 181,
									"name": "clientSecret",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 182,
									"name": "redirectURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 183,
									"name": "oAuthURL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"https://cloud.cocoon.io/oauth/\""
								}
							],
							"type": {
								"type": "reference",
								"name": "OAuth",
								"id": 176
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 29,
							"character": 23
						}
					]
				},
				{
					"id": 184,
					"name": "accessTokenURL",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 185,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 40,
							"character": 26
						}
					]
				},
				{
					"id": 186,
					"name": "authorizationURL",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 187,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 44,
							"character": 28
						}
					]
				},
				{
					"id": 188,
					"name": "logoutURL",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 189,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 48,
							"character": 21
						}
					]
				},
				{
					"id": 190,
					"name": "authorizeAuthorizationCode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 191,
							"name": "authorizeAuthorizationCode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate the URL where the user can authorize the application following the Authorization Code OAuth flow.",
								"returns": "The URL where the user can authorize the application.\n"
							},
							"parameters": [
								{
									"id": 192,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Scope of the access the application requests."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 57,
							"character": 34
						}
					]
				},
				{
					"id": 199,
					"name": "authorizeImplicit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 200,
							"name": "authorizeImplicit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate the URL where the user can authorize the application following the Implicit OAuth flow.",
								"returns": "The URL where the user can authorize the application.\n"
							},
							"parameters": [
								{
									"id": 201,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Scope of the access the application requests."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 140,
							"character": 25
						}
					]
				},
				{
					"id": 206,
					"name": "logout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 207,
							"name": "logout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log out of the API.",
								"returns": "Promise of a successful logout.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 194,
							"character": 14
						}
					]
				},
				{
					"id": 193,
					"name": "tokenExchangeAuthorizationCode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 194,
							"name": "tokenExchangeAuthorizationCode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Exchange the code you got after the user authorized the application for the access token following\nthe Authorization Code OAuth flow.",
								"returns": "Promise of the access token.\n"
							},
							"parameters": [
								{
									"id": 195,
									"name": "pCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Code found in the redirect URL, as a parameter, after the user authorizes the application."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 196,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Random string present in the redirect URL, as a parameter, after the user authorizes the application.\nThis object created it when generating the authorization URL.\nThe server should have returned the same string and will be tested now."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IAccessToken",
										"id": 172
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 81,
							"character": 38
						}
					]
				},
				{
					"id": 197,
					"name": "tokenExchangeClientCredentials",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 198,
							"name": "tokenExchangeClientCredentials",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 117,
							"character": 38
						}
					]
				},
				{
					"id": 202,
					"name": "tokenExchangePassword",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 203,
							"name": "tokenExchangePassword",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Exchange a username and password for the access token following the Password OAuth flow.",
								"returns": "Promise of the access token.\n"
							},
							"parameters": [
								{
									"id": 204,
									"name": "pUsername",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Username of a user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 205,
									"name": "pPassword",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password of a user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IAccessToken",
										"id": 172
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/oauth.ts",
							"line": 159,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						177
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						184,
						186,
						188
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						190,
						199,
						206,
						193,
						197,
						202
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/oauth.ts",
					"line": 9,
					"character": 26
				}
			]
		},
		{
			"id": 366,
			"name": "Project",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 411,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 412,
							"name": "new Project",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 413,
									"name": "projectData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Project",
								"id": 366
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 120,
							"character": 29
						}
					]
				},
				{
					"id": 373,
					"name": "bundleID",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 374,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 375,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 376,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 34,
							"character": 20
						},
						{
							"fileName": "lib/project.ts",
							"line": 38,
							"character": 20
						}
					]
				},
				{
					"id": 392,
					"name": "compilations",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 393,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 394,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 395,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 396,
													"name": "platform",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Compilation",
												"id": 262
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/project.ts",
											"line": 82,
											"character": 27
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 82,
							"character": 24
						}
					]
				},
				{
					"id": 409,
					"name": "configURL",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 410,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 98,
							"character": 21
						}
					]
				},
				{
					"id": 386,
					"name": "dateCompiled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 387,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 70,
							"character": 24
						}
					]
				},
				{
					"id": 388,
					"name": "dateCreated",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 389,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 74,
							"character": 23
						}
					]
				},
				{
					"id": 390,
					"name": "dateUpdated",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 391,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 78,
							"character": 23
						}
					]
				},
				{
					"id": 397,
					"name": "errors",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 398,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 399,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 400,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 401,
													"name": "p",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/project.ts",
											"line": 86,
											"character": 21
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 86,
							"character": 18
						}
					]
				},
				{
					"id": 367,
					"name": "id",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 368,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 14,
							"character": 14
						}
					]
				},
				{
					"id": 402,
					"name": "keys",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 403,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 404,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 405,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 406,
													"name": "platform",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "SigningKey",
												"id": 353
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/project.ts",
											"line": 90,
											"character": 19
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 90,
							"character": 16
						}
					]
				},
				{
					"id": 369,
					"name": "name",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 370,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 371,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 372,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 18,
							"character": 16
						},
						{
							"fileName": "lib/project.ts",
							"line": 22,
							"character": 16
						}
					]
				},
				{
					"id": 381,
					"name": "origin",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 382,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 383,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 384,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 385,
													"name": "p",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "lib/project.ts",
											"line": 66,
											"character": 14
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 66,
							"character": 11
						}
					]
				},
				{
					"id": 407,
					"name": "sourceURL",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 408,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 94,
							"character": 21
						}
					]
				},
				{
					"id": 377,
					"name": "version",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 378,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 379,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 380,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 50,
							"character": 19
						},
						{
							"fileName": "lib/project.ts",
							"line": 54,
							"character": 19
						}
					]
				},
				{
					"id": 466,
					"name": "assignSigningKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 467,
							"name": "assignSigningKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Assigns a singing key to the correspondent platform of the project. Next compilations will try to use the key.\nIf there was another key assigned to the platform the new key overwrites it.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 468,
									"name": "signingKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Signing key to assign."
									},
									"type": {
										"type": "reference",
										"name": "SigningKey",
										"id": 353
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 366,
							"character": 24
						}
					]
				},
				{
					"id": 449,
					"name": "compile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 450,
							"name": "compile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Places the project in the compilation queue.",
								"returns": "Promise of a successful operation.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 287,
							"character": 15
						}
					]
				},
				{
					"id": 451,
					"name": "compileDevApp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 452,
							"name": "compileDevApp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Places a DevApp of the project in the compilation queue.",
								"returns": "Promise of a successful operation.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 295,
							"character": 21
						}
					]
				},
				{
					"id": 472,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 473,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes the project.",
								"returns": "Promise of a successful operation.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 405,
							"character": 14
						}
					]
				},
				{
					"id": 418,
					"name": "getConfigXML",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 419,
							"name": "getConfigXML",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a sugar for the XML configuration of the project.",
								"returns": "Promise of a sugar for the XML configuration of the project.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "XMLSugar"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 159,
							"character": 20
						}
					]
				},
				{
					"id": 420,
					"name": "getIconBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 421,
							"name": "getIconBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the icon of the project.",
								"returns": "Promise of the icon of the project.\n"
							},
							"parameters": [
								{
									"id": 422,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to get the icon. If not set the default icon will be fetched."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Blob"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 180,
							"character": 19
						}
					]
				},
				{
					"id": 414,
					"name": "getLastUse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 415,
							"name": "getLastUse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the date of the last usage of the project.",
								"returns": "Date of the last usage of the project.\n"
							},
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 130,
							"character": 18
						}
					]
				},
				{
					"id": 427,
					"name": "getSplashBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 428,
							"name": "getSplashBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the splash of the project.",
								"returns": "Promise of the splash of the project.\n"
							},
							"parameters": [
								{
									"id": 429,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to get the splash. If not set the default splash will be fetched."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Blob"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 199,
							"character": 21
						}
					]
				},
				{
					"id": 416,
					"name": "isCompiling",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 417,
							"name": "isCompiling",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if there is at least an ongoing compilation.",
								"returns": "If there is at least an ongoing compilation.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 142,
							"character": 19
						}
					]
				},
				{
					"id": 453,
					"name": "refresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 454,
							"name": "refresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetches the project from Cocoon.io.",
								"returns": "Promise of a successful operation.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 303,
							"character": 15
						}
					]
				},
				{
					"id": 455,
					"name": "refreshCocoon",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 456,
							"name": "refreshCocoon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Uploads the current config.xml extracted from the sugar.",
								"returns": "Promise of a successful operation.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 319,
							"character": 21
						}
					]
				},
				{
					"id": 457,
					"name": "refreshUntilCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 458,
							"name": "refreshUntilCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetches the project from Cocoon.io until every compilations is completed."
							},
							"parameters": [
								{
									"id": 459,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Function that will be called for each attempt to check if the compilations are completed."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 460,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 461,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 462,
															"name": "completed",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 463,
															"name": "error",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/project.ts",
													"line": 336,
													"character": 39
												}
											]
										}
									}
								},
								{
									"id": 464,
									"name": "interval",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Interval between fetches."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": " this.DEFAULT_WAIT_TIME"
								},
								{
									"id": 465,
									"name": "maxWaitTime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Maximum time to wait.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": " this.MAX_WAIT_TIME"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 336,
							"character": 29
						}
					]
				},
				{
					"id": 469,
					"name": "removeSigningKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 470,
							"name": "removeSigningKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the signing key assigned to the indicated project platform.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 471,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to remove the signing key from."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 383,
							"character": 24
						}
					]
				},
				{
					"id": 423,
					"name": "setIconBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 424,
							"name": "setIconBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the icon of the project.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 425,
									"name": "icon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Image to use as new icon. Recommended 2048x2048 PNG."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 426,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to set the icon. If not set the default icon will be updated."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 190,
							"character": 19
						}
					]
				},
				{
					"id": 430,
					"name": "setSplashBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 431,
							"name": "setSplashBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the splash of the project.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 432,
									"name": "splash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Image to use as new splash. Recommended 2048x2048 PNG."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 433,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to set the splash. If not set the default splash will be updated."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 209,
							"character": 21
						}
					]
				},
				{
					"id": 446,
					"name": "updateConfigXml",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 447,
							"name": "updateConfigXml",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the config.xml file of the project.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 448,
									"name": "xml",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "New config.xml for the project."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 270,
							"character": 23
						}
					]
				},
				{
					"id": 440,
					"name": "updateRepository",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 441,
							"name": "updateRepository",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the project providing a git repository to clone.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 442,
									"name": "repo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 443,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 445,
													"name": "branch",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "lib/project.ts",
															"line": 253,
															"character": 51
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 444,
													"name": "url",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/project.ts",
															"line": 253,
															"character": 35
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														445,
														444
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/project.ts",
													"line": 253,
													"character": 30
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 253,
							"character": 24
						}
					]
				},
				{
					"id": 437,
					"name": "updateURL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 438,
							"name": "updateURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the project providing a URL.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 439,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "URL to fetch the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 235,
							"character": 17
						}
					]
				},
				{
					"id": 434,
					"name": "updateZip",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 435,
							"name": "updateZip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the project uploading a zip file.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 436,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Zip file containing the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project.ts",
							"line": 218,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						411
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						373,
						392,
						409,
						386,
						388,
						390,
						397,
						367,
						402,
						369,
						381,
						407,
						377
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						466,
						449,
						451,
						472,
						418,
						420,
						414,
						427,
						416,
						453,
						455,
						457,
						469,
						423,
						430,
						446,
						440,
						437,
						434
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/project.ts",
					"line": 13,
					"character": 28
				}
			]
		},
		{
			"id": 474,
			"name": "ProjectAPI",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 571,
					"name": "assignSigningKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 572,
							"name": "assignSigningKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Assigns a singing key to the correspondent platform of a project. Next compilations will try to use the key.\nIf there was another key assigned to the platform the new key overwrites it.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 573,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to assign the key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 574,
									"name": "signingKeyId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the signing key that you want to assign to the project."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 537,
							"character": 31
						}
					]
				},
				{
					"id": 565,
					"name": "compile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 566,
							"name": "compile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Places a project in the compilation queue.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 567,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to compile."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 497,
							"character": 22
						}
					]
				},
				{
					"id": 568,
					"name": "compileDevApp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 569,
							"name": "compileDevApp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Places a DevApp of a project in the compilation queue.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 570,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to compile a DevApp."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 516,
							"character": 28
						}
					]
				},
				{
					"id": 487,
					"name": "createFromRepository",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 488,
							"name": "createFromRepository",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a project from a git repository to clone.",
								"returns": "Promise of the project created.\n"
							},
							"parameters": [
								{
									"id": 489,
									"name": "repo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
									},
									"type": {
										"type": "reference",
										"name": "IRepositoryData",
										"id": 259
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 96,
							"character": 35
						}
					]
				},
				{
					"id": 490,
					"name": "createFromRepositoryUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 491,
							"name": "createFromRepositoryUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a project from a git repository to clone.",
								"returns": "Promise of the data of the project created.\n"
							},
							"parameters": [
								{
									"id": 492,
									"name": "repo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
									},
									"type": {
										"type": "reference",
										"name": "IRepositoryData",
										"id": 259
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 113,
							"character": 46
						}
					]
				},
				{
					"id": 481,
					"name": "createFromURL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 482,
							"name": "createFromURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a project from an URL .",
								"returns": "Promise of the project created.\n"
							},
							"parameters": [
								{
									"id": 483,
									"name": "pUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "URL to fetch the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 58,
							"character": 28
						}
					]
				},
				{
					"id": 484,
					"name": "createFromURLUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 485,
							"name": "createFromURLUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a project from an URL .",
								"returns": "Promise of the data of the project created.\n"
							},
							"parameters": [
								{
									"id": 486,
									"name": "pUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "URL to fetch the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 74,
							"character": 39
						}
					]
				},
				{
					"id": 475,
					"name": "createFromZipUpload",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 476,
							"name": "createFromZipUpload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a project from a Zip file.",
								"returns": "Promise of the project created.\n"
							},
							"parameters": [
								{
									"id": 477,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Zip file containing the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 18,
							"character": 34
						}
					]
				},
				{
					"id": 478,
					"name": "createFromZipUploadUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 479,
							"name": "createFromZipUploadUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a project from a Zip file.",
								"returns": "Promise of the data of the project created.\n"
							},
							"parameters": [
								{
									"id": 480,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Zip file containing the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 34,
							"character": 45
						}
					]
				},
				{
					"id": 499,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 500,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a project.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 501,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to delete."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 170,
							"character": 21
						}
					]
				},
				{
					"id": 493,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 494,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch the information of a project.",
								"returns": "Promise of the project fetched.\n"
							},
							"parameters": [
								{
									"id": 495,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to fetch."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 134,
							"character": 18
						}
					]
				},
				{
					"id": 554,
					"name": "getConfigXml",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 555,
							"name": "getConfigXml",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetches the config.xml file of a project.",
								"returns": "Promise of the config.xml file of a project.\n"
							},
							"parameters": [
								{
									"id": 556,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to fetch the config.xml."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 437,
							"character": 27
						}
					]
				},
				{
					"id": 506,
					"name": "getIconBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 507,
							"name": "getIconBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the icon of a project.",
								"returns": "Promise of the icon of the project.\n"
							},
							"parameters": [
								{
									"id": 508,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to get the icon."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 509,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to get the icon. If not set the default icon will be fetched."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Blob"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 226,
							"character": 26
						}
					]
				},
				{
					"id": 515,
					"name": "getSplashBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 516,
							"name": "getSplashBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the splash of the project.",
								"returns": "Promise of the splash of the project.\n"
							},
							"parameters": [
								{
									"id": 517,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to get the splash."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 518,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to get the splash. If not set the default splash will be fetched."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Blob"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 271,
							"character": 28
						}
					]
				},
				{
					"id": 496,
					"name": "getUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 497,
							"name": "getUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch the information of a project.",
								"returns": "Promise of the data of the project fetched.\n"
							},
							"parameters": [
								{
									"id": 498,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to fetch."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 150,
							"character": 29
						}
					]
				},
				{
					"id": 502,
					"name": "list",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 503,
							"name": "list",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch a list containing the information of all the project.",
								"returns": "Promise of the list of all the projects.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Project",
											"id": 366
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 188,
							"character": 19
						}
					]
				},
				{
					"id": 504,
					"name": "listUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 505,
							"name": "listUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch a list containing the information of all the project.",
								"returns": "Promise of the list of data of all the projects.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IProjectData",
											"id": 217
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 205,
							"character": 30
						}
					]
				},
				{
					"id": 575,
					"name": "removeSigningKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 576,
							"name": "removeSigningKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the signing key assigned to the indicated project platform.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 577,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to remove the key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 578,
									"name": "signingKeyId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the signing key that you want to remove from the project."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 557,
							"character": 31
						}
					]
				},
				{
					"id": 510,
					"name": "setIconBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 511,
							"name": "setIconBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the icon of a project.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 512,
									"name": "icon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Image to use as new icon. Recommended 2048x2048 PNG."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 513,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to set the icon."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 514,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to set the icon. If not set the default icon will be updated."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 247,
							"character": 26
						}
					]
				},
				{
					"id": 519,
					"name": "setSplashBlob",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 520,
							"name": "setSplashBlob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the splash of the project.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 521,
									"name": "splash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Image to use as new splash. Recommended 2048x2048 PNG."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 522,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to set the splash."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 523,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Platform to set the splash. If not set the default splash will be updated."
									},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 292,
							"character": 28
						}
					]
				},
				{
					"id": 557,
					"name": "updateConfigXml",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 558,
							"name": "updateConfigXml",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates the config.xml file of a project.",
								"returns": "Promise of the project whose config.xml was updated.\n"
							},
							"parameters": [
								{
									"id": 559,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update the config.xml."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 560,
									"name": "xml",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "New config.xml for the project."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 457,
							"character": 30
						}
					]
				},
				{
					"id": 561,
					"name": "updateConfigXmlUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 562,
							"name": "updateConfigXmlUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates the config.xml file of a project.",
								"returns": "Promise of the date of the project whose config.xml was updated.\n"
							},
							"parameters": [
								{
									"id": 563,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update the config.xml."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 564,
									"name": "xml",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "New config.xml for the project."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 474,
							"character": 41
						}
					]
				},
				{
					"id": 540,
					"name": "updateRepository",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 541,
							"name": "updateRepository",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the source code of a project providing a git repository to clone.",
								"returns": "Promise of the project updated.\n"
							},
							"parameters": [
								{
									"id": 542,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 543,
									"name": "repo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to master if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 544,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 546,
													"name": "branch",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "lib/project-api.ts",
															"line": 398,
															"character": 77
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 545,
													"name": "url",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/project-api.ts",
															"line": 398,
															"character": 61
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														546,
														545
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/project-api.ts",
													"line": 398,
													"character": 56
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 398,
							"character": 31
						}
					]
				},
				{
					"id": 547,
					"name": "updateRepositoryUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 548,
							"name": "updateRepositoryUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the source code of a project providing a git repository to clone.",
								"returns": "Promise of the data of the project updated.\n"
							},
							"parameters": [
								{
									"id": 549,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 550,
									"name": "repo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Object containing a URL of the git repo and the name of the branch to checkout\n(defaults to 'master' if not set). It's used to fetch the source code for the project. Can contain a config.xml too."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 551,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 553,
													"name": "branch",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "lib/project-api.ts",
															"line": 417,
															"character": 69
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 552,
													"name": "url",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "lib/project-api.ts",
															"line": 417,
															"character": 53
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														553,
														552
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/project-api.ts",
													"line": 417,
													"character": 48
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 416,
							"character": 42
						}
					]
				},
				{
					"id": 532,
					"name": "updateURL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 533,
							"name": "updateURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the source code of a project providing a URL to fetch it from.",
								"returns": "Promise of the project updated.\n"
							},
							"parameters": [
								{
									"id": 534,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 535,
									"name": "pUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "URL to fetch the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 358,
							"character": 24
						}
					]
				},
				{
					"id": 536,
					"name": "updateURLUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 537,
							"name": "updateURLUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the source code of a project providing a URL to fetch it from.",
								"returns": "Promise of the data of the project updated.\n"
							},
							"parameters": [
								{
									"id": 538,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 539,
									"name": "pUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "URL to fetch the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 375,
							"character": 35
						}
					]
				},
				{
					"id": 524,
					"name": "updateZip",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 525,
							"name": "updateZip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the source code of a project uploading a zip file.",
								"returns": "Promise of the project updated.\n"
							},
							"parameters": [
								{
									"id": 526,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 527,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Zip file containing the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Project",
										"id": 366
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 316,
							"character": 24
						}
					]
				},
				{
					"id": 528,
					"name": "updateZipUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 529,
							"name": "updateZipUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the source code of a project uploading a zip file.",
								"returns": "Promise of the data of the project updated.\n"
							},
							"parameters": [
								{
									"id": 530,
									"name": "projectId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the project to update."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 531,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Zip file containing the source code. Can contain a config.xml file too."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IProjectData",
										"id": 217
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/project-api.ts",
							"line": 333,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						571,
						565,
						568,
						487,
						490,
						481,
						484,
						475,
						478,
						499,
						493,
						554,
						506,
						515,
						496,
						502,
						504,
						575,
						510,
						519,
						557,
						561,
						540,
						547,
						532,
						536,
						524,
						528
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/project-api.ts",
					"line": 12,
					"character": 31
				}
			]
		},
		{
			"id": 353,
			"name": "SigningKey",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 360,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 361,
							"name": "new SigningKey",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 362,
									"name": "signingKeyData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ISigningKeyData",
										"id": 214
									}
								},
								{
									"id": 363,
									"name": "platform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Platform",
										"id": 1
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SigningKey",
								"id": 353
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key.ts",
							"line": 22,
							"character": 29
						}
					]
				},
				{
					"id": 354,
					"name": "id",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 355,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key.ts",
							"line": 8,
							"character": 14
						}
					]
				},
				{
					"id": 356,
					"name": "name",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 357,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key.ts",
							"line": 12,
							"character": 16
						}
					]
				},
				{
					"id": 358,
					"name": "platform",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 359,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Platform",
								"id": 1
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key.ts",
							"line": 16,
							"character": 20
						}
					]
				},
				{
					"id": 364,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 365,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete the signing key.",
								"returns": "Promise of a successful operation.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key.ts",
							"line": 34,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						360
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						354,
						356,
						358
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						364
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/signing-key.ts",
					"line": 7,
					"character": 31
				}
			]
		},
		{
			"id": 281,
			"name": "SigningKeyAPI",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 282,
					"name": "createAndroid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 283,
							"name": "createAndroid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an Android signing key.",
								"returns": "Promise of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 284,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 285,
									"name": "pAlias",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A name you will use when you sign your project."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 286,
									"name": "keystore",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A binary file that contains a set of private keys."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 287,
									"name": "keystorePassword",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password of the keystore."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 288,
									"name": "certificatePassword",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password of the certificate used to create the keystore."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SigningKey",
										"id": 353
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 21,
							"character": 28
						}
					]
				},
				{
					"id": 289,
					"name": "createAndroidUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 290,
							"name": "createAndroidUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an Android signing key.",
								"returns": "Promise of the date of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 291,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 292,
									"name": "pAlias",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A name you will use when you sign your project."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 293,
									"name": "keystore",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A binary file that contains a set of private keys."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 294,
									"name": "keystorePassword",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password of the keystore."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 295,
									"name": "certificatePassword",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password of the certificate used to create the keystore."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ISigningKeyData",
										"id": 214
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 42,
							"character": 39
						}
					]
				},
				{
					"id": 296,
					"name": "createIOS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 297,
							"name": "createIOS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an iOS signing key.",
								"returns": "Promise of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 298,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 299,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The password of the p12 certificate."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 300,
									"name": "provisioningProfile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 301,
									"name": "certificate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SigningKey",
										"id": 353
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 80,
							"character": 24
						}
					]
				},
				{
					"id": 302,
					"name": "createIOSUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 303,
							"name": "createIOSUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an iOS signing key.",
								"returns": "Promise of the date of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 304,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 305,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The password of the p12 certificate."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 306,
									"name": "provisioningProfile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 307,
									"name": "certificate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ISigningKeyData",
										"id": 214
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 103,
							"character": 35
						}
					]
				},
				{
					"id": 308,
					"name": "createMacOS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 309,
							"name": "createMacOS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an MacOS signing key.",
								"returns": "Promise of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 310,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 311,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The password of the p12 certificate."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 312,
									"name": "provisioningProfile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 313,
									"name": "certificate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SigningKey",
										"id": 353
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 119,
							"character": 26
						}
					]
				},
				{
					"id": 314,
					"name": "createMacOSUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 315,
							"name": "createMacOSUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an MacOS signing key.",
								"returns": "Promise of the data of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 316,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 317,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The password of the p12 certificate."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 318,
									"name": "provisioningProfile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The provisioning profile must be a Distribution one. You can create an “Ad Hoc”\nprovisioning profile if you plan you distribute it internally to a group of persons or an “App Store” provisioning\nprofile for uploading the final app to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 319,
									"name": "certificate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The p12 signing certificate must be a production one, either you are creating an “Ad Hoc” IPA or\nan IPA to upload to the Apple App Store."
									},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ISigningKeyData",
										"id": 214
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 142,
							"character": 37
						}
					]
				},
				{
					"id": 320,
					"name": "createWindows",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 321,
							"name": "createWindows",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an Windows signing key.",
								"returns": "Promise of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 322,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 323,
									"name": "pPassword",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 324,
									"name": "pPackageThumbprint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 325,
									"name": "pPublisherId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 326,
									"name": "keystore",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SigningKey",
										"id": 353
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 156,
							"character": 28
						}
					]
				},
				{
					"id": 327,
					"name": "createWindowsUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 328,
							"name": "createWindowsUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create an Windows signing key.",
								"returns": "Promise of the data of the signing key created.\n"
							},
							"parameters": [
								{
									"id": 329,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Name for the signing key."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 330,
									"name": "pPassword",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 331,
									"name": "pPackageThumbprint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 332,
									"name": "pPublisherId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 333,
									"name": "keystore",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ISigningKeyData",
										"id": 214
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 177,
							"character": 39
						}
					]
				},
				{
					"id": 340,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 341,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a signing key.",
								"returns": "Promise of a successful operation.\n"
							},
							"parameters": [
								{
									"id": 342,
									"name": "signingKeyId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the signing key to delete."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 261,
							"character": 21
						}
					]
				},
				{
					"id": 334,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 335,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch the information of a signing key.",
								"returns": "Promise of the signing key fetched.\n"
							},
							"parameters": [
								{
									"id": 336,
									"name": "signingKeyId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the signing key to fetch."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SigningKey",
										"id": 353
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 209,
							"character": 18
						}
					]
				},
				{
					"id": 337,
					"name": "getUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 338,
							"name": "getUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch the information of a signing key.",
								"returns": "Promise of the data of the signing key fetched.\n"
							},
							"parameters": [
								{
									"id": 339,
									"name": "signingKeyId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "ID of the signing key to fetch."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ISigningKeyData",
										"id": 214
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 235,
							"character": 29
						}
					]
				},
				{
					"id": 343,
					"name": "list",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 344,
							"name": "list",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch a list containing the information of all the signing keys.",
								"returns": ">} Promise of the list of all the signing keys.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 345,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 346,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 347,
															"name": "platform",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "SigningKey",
															"id": 353
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/signing-key-api.ts",
													"line": 279,
													"character": 31
												}
											]
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 279,
							"character": 19
						}
					]
				},
				{
					"id": 348,
					"name": "listUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 349,
							"name": "listUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch a list containing the information of all the signing keys.",
								"returns": ">} Promise of the list of all the data of the signing keys.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 350,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 351,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 352,
															"name": "platform",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "ISigningKeyData",
															"id": 214
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "lib/signing-key-api.ts",
													"line": 303,
													"character": 42
												}
											]
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/signing-key-api.ts",
							"line": 303,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						282,
						289,
						296,
						302,
						308,
						314,
						320,
						327,
						340,
						334,
						337,
						343,
						348
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/signing-key-api.ts",
					"line": 11,
					"character": 34
				}
			]
		},
		{
			"id": 596,
			"name": "User",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 619,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 620,
							"name": "new User",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 621,
									"name": "userData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IUserData",
										"id": 581
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "User",
								"id": 596
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 57,
							"character": 30
						}
					]
				},
				{
					"id": 609,
					"name": "email",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 610,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 611,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 612,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 31,
							"character": 17
						},
						{
							"fileName": "lib/user.ts",
							"line": 35,
							"character": 17
						}
					]
				},
				{
					"id": 613,
					"name": "eula",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 614,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 39,
							"character": 16
						}
					]
				},
				{
					"id": 605,
					"name": "lastName",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 606,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 607,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 608,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 23,
							"character": 20
						},
						{
							"fileName": "lib/user.ts",
							"line": 27,
							"character": 20
						}
					]
				},
				{
					"id": 601,
					"name": "name",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 602,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 603,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 604,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 15,
							"character": 16
						},
						{
							"fileName": "lib/user.ts",
							"line": 19,
							"character": 16
						}
					]
				},
				{
					"id": 615,
					"name": "plan",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 616,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "IPaymentPlan",
								"id": 579
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 43,
							"character": 16
						}
					]
				},
				{
					"id": 617,
					"name": "platforms",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 618,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 47,
							"character": 21
						}
					]
				},
				{
					"id": 597,
					"name": "userName",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true,
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 598,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 599,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 600,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user.ts",
							"line": 7,
							"character": 20
						},
						{
							"fileName": "lib/user.ts",
							"line": 11,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						619
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						609,
						613,
						605,
						601,
						615,
						617,
						597
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/user.ts",
					"line": 6,
					"character": 25
				}
			]
		},
		{
			"id": 622,
			"name": "UserAPI",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 623,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 624,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch the information of the user.",
								"returns": "Promise of the user.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "User",
										"id": 596
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user-api.ts",
							"line": 15,
							"character": 18
						}
					]
				},
				{
					"id": 625,
					"name": "getUnprocessed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isPublic": true
					},
					"signatures": [
						{
							"id": 626,
							"name": "getUnprocessed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch the information of the user.",
								"returns": "Promise of the data of the user.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IUserData",
										"id": 581
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/user-api.ts",
							"line": 30,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						623,
						625
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/user-api.ts",
					"line": 10,
					"character": 28
				}
			]
		},
		{
			"id": 172,
			"name": "IAccessToken",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 173,
					"name": "access_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-access-token.ts",
							"line": 4,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 174,
					"name": "expires_in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-access-token.ts",
							"line": 5,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 175,
					"name": "refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-access-token.ts",
							"line": 6,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						173,
						174,
						175
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-access-token.ts",
					"line": 3,
					"character": 29
				}
			]
		},
		{
			"id": 118,
			"name": "ICocoonTemplate",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 120,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-template.ts",
							"line": 5,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 124,
					"name": "environment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-template.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 122,
					"name": "github_url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-template.ts",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 121,
					"name": "image_url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-template.ts",
							"line": 6,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 119,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-template.ts",
							"line": 4,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 123,
					"name": "orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-template.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						120,
						124,
						122,
						121,
						119,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-cocoon-template.ts",
					"line": 3,
					"character": 32
				}
			]
		},
		{
			"id": 125,
			"name": "ICocoonVersion",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 127,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-version.ts",
							"line": 5,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 126,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-version.ts",
							"line": 4,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 128,
					"name": "platforms",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-cocoon-version.ts",
							"line": 6,
							"character": 10
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reflection",
								"declaration": {
									"id": 129,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130,
											"name": "name",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/interfaces/i-cocoon-version.ts",
													"line": 6,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 131,
											"name": "version",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/interfaces/i-cocoon-version.ts",
													"line": 6,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												130,
												131
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/interfaces/i-cocoon-version.ts",
											"line": 6,
											"character": 13
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						127,
						126,
						128
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-cocoon-version.ts",
					"line": 3,
					"character": 31
				}
			]
		},
		{
			"id": 90,
			"name": "ICredentialStorage",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 91,
					"name": "getAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 92,
							"name": "getAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-credential-storage.ts",
							"line": 4,
							"character": 15
						}
					]
				},
				{
					"id": 97,
					"name": "getRefreshToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 98,
							"name": "getRefreshToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-credential-storage.ts",
							"line": 6,
							"character": 16
						}
					]
				},
				{
					"id": 102,
					"name": "logout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 103,
							"name": "logout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-credential-storage.ts",
							"line": 8,
							"character": 7
						}
					]
				},
				{
					"id": 93,
					"name": "setAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 94,
							"name": "setAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 95,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 96,
									"name": "expires",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-credential-storage.ts",
							"line": 5,
							"character": 15
						}
					]
				},
				{
					"id": 99,
					"name": "setRefreshToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 100,
							"name": "setRefreshToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 101,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "lib/interfaces/i-credential-storage.ts",
							"line": 7,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						91,
						97,
						102,
						93,
						99
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-credential-storage.ts",
					"line": 3,
					"character": 35
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "CookieCredentialStorage",
					"id": 104
				},
				{
					"type": "reference",
					"name": "MemoryCredentialStorage",
					"id": 132
				}
			]
		},
		{
			"id": 579,
			"name": "IPaymentPlan",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 580,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-payment-plan.ts",
							"line": 4,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						580
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-payment-plan.ts",
					"line": 3,
					"character": 29
				}
			]
		},
		{
			"id": 217,
			"name": "IProjectData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 221,
					"name": "build_count",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 227,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 14,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 232,
					"name": "date_compiled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 19,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 230,
					"name": "date_created",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 231,
					"name": "date_updated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 241,
					"name": "devapp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 22,
							"character": 7
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 237,
					"name": "download",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 21,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 238,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 239,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 240,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 21,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 246,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 24,
							"character": 6
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 247,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 248,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 249,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 24,
									"character": 7
								}
							]
						}
					}
				},
				{
					"id": 229,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 16,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 250,
					"name": "icons",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 25,
							"character": 6
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 251,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 252,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 253,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 25,
									"character": 7
								}
							]
						}
					}
				},
				{
					"id": 218,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 8,
							"character": 3
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 242,
					"name": "keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 23,
							"character": 5
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 243,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 244,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 245,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ISigningKeyData",
										"id": 214
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 23,
									"character": 6
								}
							]
						}
					}
				},
				{
					"id": 223,
					"name": "origin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 13,
							"character": 7
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 224,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 225,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 226,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 13,
									"character": 8
								}
							]
						}
					}
				},
				{
					"id": 220,
					"name": "package",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 258,
					"name": "platforms",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 27,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Platform",
							"id": 1
						}
					}
				},
				{
					"id": 228,
					"name": "source",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 15,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 254,
					"name": "splashes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 26,
							"character": 9
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 255,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 256,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 257,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 26,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 233,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 20,
							"character": 7
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 234,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 235,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 236,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Status",
										"id": 208
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-project-data.ts",
									"line": 20,
									"character": 8
								}
							]
						}
					}
				},
				{
					"id": 219,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 9,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 222,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-project-data.ts",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						221,
						227,
						232,
						230,
						231,
						241,
						237,
						246,
						229,
						250,
						218,
						242,
						223,
						220,
						258,
						228,
						254,
						233,
						219,
						222
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-project-data.ts",
					"line": 7,
					"character": 29
				}
			]
		},
		{
			"id": 259,
			"name": "IRepositoryData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 261,
					"name": "branch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-repository-data.ts",
							"line": 5,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 260,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-repository-data.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						261,
						260
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-repository-data.ts",
					"line": 3,
					"character": 32
				}
			]
		},
		{
			"id": 214,
			"name": "ISigningKeyData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 215,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-signing-key-data.ts",
							"line": 4,
							"character": 3
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 216,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-signing-key-data.ts",
							"line": 5,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						215,
						216
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-signing-key-data.ts",
					"line": 3,
					"character": 32
				}
			]
		},
		{
			"id": 581,
			"name": "IUserData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 589,
					"name": "connections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 584,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 9,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 587,
					"name": "eula",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 12,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 582,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 7,
							"character": 3
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 590,
					"name": "keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 15,
							"character": 5
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 591,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 592,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 593,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ISigningKeyData",
											"id": 214
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "lib/interfaces/i-user-data.ts",
									"line": 15,
									"character": 6
								}
							]
						}
					}
				},
				{
					"id": 586,
					"name": "lastname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 11,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 595,
					"name": "migration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 17,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 585,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 10,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 588,
					"name": "plan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 13,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "IPaymentPlan",
						"id": 579
					}
				},
				{
					"id": 594,
					"name": "platforms",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 16,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 583,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "lib/interfaces/i-user-data.ts",
							"line": 8,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						589,
						584,
						587,
						582,
						590,
						586,
						595,
						585,
						588,
						594,
						583
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/interfaces/i-user-data.ts",
					"line": 6,
					"character": 26
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				167,
				1,
				208,
				627
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				9,
				146,
				262,
				104,
				70,
				132,
				176,
				366,
				474,
				353,
				281,
				596,
				622
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				172,
				118,
				125,
				90,
				579,
				217,
				259,
				214,
				581
			]
		}
	]
}